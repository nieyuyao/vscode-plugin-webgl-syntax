module.exports=function(e){var t={};function o(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,o),a.l=!0,a.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)o.d(n,a,function(t){return e[t]}.bind(null,a));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=2)}([function(e,t){e.exports=require("vscode")},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(0),a=o(4),r=o(5),i=o(6),l=o(7),s=/(?:^|\s*|\{|\,)gl\.([0-9a-zA-Z_]+)(?:$|\,|;|\}|\s*|\()/g,d=/(^|\s*)(WebGLRenderingContext\.[0-9a-zA-Z\(\)]+)(\s*)/g,u=/<[^<>]+>/g;function m(e,t){return`Reference: [${e}](${t})`}function v(e){return`\`\`\`\n${e}\n\`\`\``}function f(e,t,o=""){return`*@${e}* -\`${t}\`.${o}  \n`}t.getProp=function(e,t){const o=t.line,n=t.character;let r=e.lineAt(o).text,i="",l=!1;return r.replace(s,(e,t,o)=>{const a=e.indexOf(t);return n>=o+a&&n<=a+o+t.length&&(i=t,l=!0),e}),new a.Prop(i,l)},t.getAttrComponent=function(e){let t;if(e.name)return i.find(o=>(o.name===e.name&&(t=o),!!t)),t},t.getConstantComponent=function(e){let t;if(e.name)return l.find(o=>(o.name===e.name&&(t=o),!!t)),t},t.swapAttrComponentMarkDown=function(e){if(void 0===e)return new n.MarkdownString("");const{desc:t,syntax:o,returnVal:a,url:r,params:i}=e;let l="";l=(l=t.replace(d,(e,t,o,n)=>t+function(e){return`**${e}**`}(o)+n)).replace(u,e=>(function(e){return`\`${e}\``})(e)),l+="  \n",l+=v(o),l+="  \n",i.forEach(e=>{l+=f("param",e.paramName,e.desc)}),l+=f("return",a),l+="  \n";const s=`https://${r}`;l+=m(s,s);let c=new n.MarkdownString(l);return c.isTrusted=!0,c},t.swapConstantComponentMarkDown=function(e){if(void 0===e)return new n.MarkdownString("");const{name:t,value:o,desc:a,url:r}=e;let i="";i+=a,i+="  \n",i+=v(t),i+="  \n",i+=f("value",o);const l=`https://${r}`;i+=m(l,l);let s=new n.MarkdownString(i);return s.isTrusted=!0,s},t.getInputVal=function(e,t){let o="",n=!1;const a=t.line,r=t.character,i=e.lineAt(a).text;for(var l=r;l>=0;l--){let e=i.charAt(l);if("."===e)break;o=e+o}return"gl"===i.substring(l-2,l)&&(n=!0),n?o:""},t.createPropRegExp=function(e){let t=".*";for(let o=0;o<e.length;o++)t+=e.charAt(o)+".*";return new RegExp(t,"g")},t.createCompleteItems=function(e,t){const o=[];return i.forEach(t=>{if(t.name.match(e)){let e;e="value"===t.type?new n.CompletionItem(t.name,11):function(e){const{params:t,name:o}=e,a=new n.CompletionItem(o);if(t.length>0){let e=o+"(";t.forEach((t,o)=>{e+="${"+(o+1)+":"+t.paramName+"}, "}),e=e.substring(0,e.length-2),e+=")";const r=new n.SnippetString(e);a.insertText=r}return a}(t),o.push(e)}}),l.forEach(t=>{t.name.match(e)&&o.push(new n.CompletionItem(t.name,20))}),r.default.forEach(t=>{t.name.match(e)&&o.push(function(e,t){const{name:o,value:a}=e,r=new n.CompletionItem(o,0),i=new n.SnippetString("\n"+a+"\n");return r.insertText=i,r}(t))}),o}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=o(0),a=o(3),r=o(8),i={scheme:"file",language:"javascript"},l={scheme:"file",language:"html"},s=new a.default,d=new r.default;t.activate=function(e){const t=n.languages.registerHoverProvider([i,l],s),o=n.languages.registerCompletionItemProvider([i,l],d,".");e.subscriptions.push(t,o)},t.deactivate=function(){}},function(e,t,o){"use strict";var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))(function(a,r){function i(e){try{s(n.next(e))}catch(e){r(e)}}function l(e){try{s(n.throw(e))}catch(e){r(e)}}function s(e){e.done?a(e.value):new o(function(t){t(e.value)}).then(i,l)}s((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const a=o(0),r=o(1);t.default=class{provideHover(e,t,o){return n(this,void 0,void 0,function*(){const o=r.getProp(e,t);let n,i;return(i=r.getAttrComponent(o))?n=r.swapAttrComponentMarkDown(i):(i=r.getConstantComponent(o),n=r.swapConstantComponentMarkDown(i)),new a.Hover(n)})}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Prop=class{constructor(e,t){this.name="",this.isHover=!1,this.name=e,this.isHover=t}}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=[{name:"VERTEX_SHADER_TEMPLATE",type:"text",value:"`\n    attribute vec4 a_Position;\n    void main() {\n        gl_Position = a_Position;\n    }\n`"},{name:"FRAGMENT_SHADER_TEMPLATE",type:"text",value:"`\n    void main() {\n        gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n    }\n`"}]},function(e){e.exports=[{name:"canvas",desc:"The WebGLRenderingContext.canvas property is a read-only reference to the HTMLCanvasElement or OffscreenCanvas object that is associated with the context. It might be null if it is not associated with a <canvas> element or an OffscreenCanvas object.",syntax:"gl.canvas;",params:[],returnVal:"Either a HTMLCanvasElement orÂ OffscreenCanvas object or null.",type:"value",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/canvas"},{name:"commit",desc:"The WebGLRenderingContext.commit() method pushes frames back to the original HTMLCanvasElement, if the context is not directly fixed to a specific canvas.",syntax:"void WebGLRenderingContext.commit()",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit"},{name:"drawingBufferWidth",desc:"The read-only WebGLRenderingContext.drawingBufferWidth property represents the actual width of the current drawing buffer. It should match the width attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested width.",syntax:"gl.drawingBufferWidth;",params:[],returnVal:"None.",type:"value",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferWidth"},{name:"drawingBufferHeight",desc:"The read-only WebGLRenderingContext.drawingBufferHeight property represents the actual height of the current drawing buffer. It should match the height attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested height.",syntax:"gl.drawingBufferHeight;",params:[],returnVal:"None.",type:"value",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferHeight"},{name:"getContextAttributes",desc:"The WebGLRenderingContext.getContextAttributes() method returns a WebGLContextAttributes object that contains the actual context parameters. Might return null, if the context is lost.",syntax:"gl.getContextAttributes();",params:[],returnVal:"A WebGLContextAttributes object that contains the actual context parameters, or null if the context is lost.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getContextAttributes"},{name:"isContextLost",desc:"The WebGLRenderingContext.isContextLost() method returns a Boolean indicating whether or not the WebGL context has been lost.",syntax:"gl.isContextLost();",params:[],returnVal:"A Boolean. True if the context is lost, false otherwise.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isContextLost"},{name:"scissor",desc:"The WebGLRenderingContext.scissor() method of the WebGL API sets a scissor box, which limits the drawing to a specified rectangle.",syntax:"void gl.scissor(x, y, width, height);\n",params:[{paramName:"x",desc:"A GLint specifying the horizontal coordinate for the lower left corner of the box. Default value: 0."},{paramName:"y",desc:"A GLint specifying the vertical coordinate for the lower left corner of the box. Default value: 0."},{paramName:"width",desc:"A non-negative Glsizei specifying the width of the scissor box. Default value: width of the canvas."},{paramName:"height",desc:"A non-negative Glsizei specifying the height of the scissor box. Default value: height of the canvas."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/scissor"},{name:"viewport",desc:"The WebGLRenderingContext.viewport() method of the WebGL API sets the viewport, which specifies the affine transformation of x and y from normalized device coordinates to window coordinates.",syntax:"void gl.viewport(x, y, width, height);\n",params:[{paramName:"x",desc:"A GLint specifying the horizontal coordinate for the lower left corner of the viewport origin. Default value: 0."},{paramName:"y",desc:"A GLint specifying the vertical coordinate for the lower left corner of the viewport origin. Default value: 0."},{paramName:"width",desc:"A non-negative Glsizei specifying the width of the viewport. Default value: width of the canvas."},{paramName:"height",desc:"A non-negative Glsizei specifying the height of the viewport. Default value: height of the canvas."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/viewport"},{name:"activeTexture",desc:"The WebGLRenderingContext.activeTexture() method of the WebGL API specifies which texture unit to make active.",syntax:"void gl.activeTexture(texture);\n",params:[{paramName:"texture",desc:"The texture unit to make active. The value is a gl.TEXTUREI where I is within the range from 0 to gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/activeTexture"},{name:"blendColor",desc:"The WebGLRenderingContext.blendColor() method of the WebGL API is used to set the source and destination blending factors.",syntax:"void gl.blendColor(red, green, blue, alpha);\n",params:[{paramName:"red",desc:"A GLclampf for the red component in the range of 0 to 1."},{paramName:"green",desc:"A GLclampf for the green component in the range of 0 to 1."},{paramName:"blue",desc:"A GLclampf for the blue component in the range of 0 to 1."},{paramName:"alpha",desc:"A GLclampf for the alpha component (transparency) in the range of 0 to 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendColor"},{name:"blendEquation",desc:"The WebGLRenderingContext.blendEquation() method of the WebGL API is used to set both the RGB blend equation and alpha blend equation to a single equation.",syntax:"void gl.blendEquation(mode);\n",params:[{paramName:"mode",desc:"A GLenum specifying how source and destination colors are combined. Must be either: gl.FUNC_ADD: source + destination, gl.FUNC_SUBTRACT: source - destination, gl.FUNC_REVERSE_SUBTRACT: destination - source When using the EXT_blend_minmax extension: ext.MIN_EXT: Minimum of source and destination, ext.MAX_EXT: Maximum of source and destination. When using a WebGL 2 context, the following values are available additionally: gl.MIN: Minimum of source and destination, gl.MAX: Maximum of source and destination. default value:Â gl.FUNC_ADD "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation"},{name:"blendEquationSeparate",desc:"The WebGLRenderingContext.blendEquationSeparate() method of the WebGL API is used to set the RGB blend equation and alpha blend equation separately.",syntax:"void gl.blendEquationSeparate(modeRGB, modeAlpha);\n",params:[{paramName:"modeRGB",desc:"A GLenum specifying how the red, green and blue components of source and destination colors are combined. Must be either: gl.FUNC_ADD: source + destination (default value), gl.FUNC_SUBTRACT: source - destination, gl.FUNC_REVERSE_SUBTRACT: destination - source, When using the EXT_blend_minmax extension: ext.MIN_EXT: Minimum of source and destination, ext.MAX_EXT: Maximum of source and destination. When using a WebGL 2 context, the following values are available additionally: gl.MIN: Minimum of source and destination, gl.MAX: Maximum of source and destination. "},{paramName:"modeAlpha",desc:"A GLenum specifying how the alpha component (transparency) of source and destination colors are combined. Must be either: gl.FUNC_ADD: source + destination (default value), gl.FUNC_SUBTRACT: source - destination, gl.FUNC_REVERSE_SUBTRACT: destination - source, When using the EXT_blend_minmax extension: ext.MIN_EXT: Minimum of source and destination, ext.MAX_EXT: Maximum of source and destination. When using a WebGL 2 context, the following values are available additionally: gl.MIN: Minimum of source and destination, gl.MAX: Maximum of source and destination. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquationSeparate"},{name:"blendFunc",desc:"The WebGLRenderingContext.blendFunc() method of the WebGL API defines which function is used for blending pixel arithmetic.",syntax:"void gl.blendFunc(sfactor, dfactor);\n",params:[{paramName:"sfactor",desc:"A GLenum specifying a multiplier for the source blending factors. The default value is gl.ONE. For possible values, see below."},{paramName:"dfactor",desc:"A GLenum specifying a multiplier for the destination blending factors. The default value is gl.ZERO. For possible values, see below."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFunc"},{name:"blendFuncSeparate",desc:"The WebGLRenderingContext.blendFuncSeparate() method of the WebGL API defines which function is used for blending pixel arithmetic for RGB and alpha components separately.",syntax:"void gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n",params:[{paramName:"srcRGB",desc:"A GLenum specifying a multiplier for the red, green and blue (RGB) source blending factors. The default value is gl.ONE. For possible values, see below."},{paramName:"dstRGB",desc:"A GLenum specifying a multiplier for the red, green and blue (RGB) destination blending factors. The default value is gl.ZERO. For possible values, see below."},{paramName:"srcAlpha",desc:"A GLenum specifying a multiplier for the alpha source blending factor. The default value is gl.ONE. For possible values, see below."},{paramName:"dstAlpha",desc:"A GLenum specifying a multiplier for the alpha destination blending factor. The default value is gl.ZERO. For possible values, see below."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate"},{name:"clearColor",desc:"The WebGLRenderingContext.clearColor() method of the WebGL API specifies the color values used when clearing color buffers.",syntax:"void gl.clearColor(red, green, blue, alpha);\n",params:[{paramName:"red",desc:"A GLclampf specifying the red color value used when the color buffers are cleared. Default value: 0."},{paramName:"green",desc:"A GLclampf specifying the green color value used when the color buffers are cleared. Default value: 0."},{paramName:"blue",desc:"A GLclampf specifying the blue color value used when the color buffers are cleared. Default value: 0."},{paramName:"alpha",desc:"A GLclampf specifying the alpha (transparency) value used when the color buffers are cleared. Default value: 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearColor"},{name:"clearDepth",desc:"The WebGLRenderingContext.clearDepth() method of the WebGL API specifies the clear value for the depth buffer.",syntax:"void gl.clearDepth(depth);\n",params:[{paramName:"depth",desc:"A GLclampf specifying the depth value used when the depth buffer is cleared. Default value: 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearDepth"},{name:"clearStencil",desc:"The WebGLRenderingContext.clearStencil() method of the WebGL API specifies the clear value for the stencil buffer.",syntax:"void gl.clearStencil(s);\n",params:[{paramName:"s",desc:"A GLint specifying the index used when the stencil buffer is cleared. Default value: 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearStencil"},{name:"colorMask",desc:"The WebGLRenderingContext.colorMask() method of the WebGL API sets which color components to enable or to disable when drawing or rendering to a WebGLFramebuffer.",syntax:"void gl.colorMask(red, green, blue, alpha);\n",params:[{paramName:"red",desc:"A GLboolean specifying whether or not the red color component can be written into the frame buffer. Default value: true."},{paramName:"green",desc:"A GLboolean specifying whether or not the green color component can be written into the frame buffer. Default value: true."},{paramName:"blue",desc:"A GLboolean specifying whether or not the blue color component can be written into the frame buffer. Default value: true."},{paramName:"alpha",desc:"A GLboolean specifying whether or not the alpha (transparency) component can be written into the frame buffer. Default value: true."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/colorMask"},{name:"cullFace",desc:"The WebGLRenderingContext.cullFace() method of the WebGL API specifies whether or not front- and/or back-facing polygons can be culled.",syntax:"void gl.cullFace(mode);\n",params:[{paramName:"mode",desc:"A GLenum specifying whether front- or back-facing polygons are candidates for culling. The default value is gl.BACK. Possible values are: gl.FRONT gl.BACK gl.FRONT_AND_BACK "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace"},{name:"depthFunc",desc:"The WebGLRenderingContext.depthFunc() method of the WebGL API specifies a function that compares incoming pixel depth to the current depth buffer value.",syntax:"void gl.depthFunc(func);\n",params:[{paramName:"func",desc:"A GLenum specifying the depth comparison function, which sets the conditions under which the pixel will be drawn. The default value is gl.LESS. Possible values are: gl.NEVER (never pass) gl.LESS (pass if the incoming value is less than the depth buffer value) gl.EQUAL (pass if the incoming value equals the the depth buffer value) gl.LEQUAL (pass if the incoming value is less than or equal to the depth buffer value) gl.GREATER (pass if the incoming value is greater than the depth buffer value) gl.NOTEQUAL (pass if the incoming value is not equal to the depth buffer value) gl.GEQUAL (pass if the incoming value is greater than or equal to the depth buffer value) gl.ALWAYS (always pass) "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthFunc"},{name:"depthMask",desc:"The WebGLRenderingContext.depthMask() method of the WebGL API sets whether writing into the depth buffer is enabled or disabled.",syntax:"void gl.depthMask(flag);\n",params:[{paramName:"flag",desc:"A GLboolean specifying whether or not writing into the depth buffer is enabled. Default value: true, meaning that writing is enabled."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthMask"},{name:"depthRange",desc:"The WebGLRenderingContext.depthRange() method of the WebGL API specifies the depth range mapping from normalized device coordinates to window or viewport coordinates.",syntax:"void gl.depthRange(zNear, zFar);\n",params:[{paramName:"zNear",desc:"A GLclampf specifying the mapping of the near clipping plane to window or viewport coordinates. Clamped to the range 0 to 1 and must be less than or equal to zFar. The default value is 0."},{paramName:"zFar",desc:"A GLclampf specifying the mapping of the far clipping plane to window or viewport coordinates.Â Clamped to the range 0 to 1. The default value is 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthRange"},{name:"disable",desc:"The WebGLRenderingContext.disable() method of the WebGL API disables specific WebGL capabilities for this context.",syntax:"void gl.disable(cap);\n",params:[{paramName:"cap",desc:"A GLenum specifying which WebGL capability to disable. Possible values:"}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disable"},{name:"enable",desc:"The WebGLRenderingContext.enable() method of the WebGL API enables specific WebGL capabilities for this context.",syntax:"void gl.enable(cap);\n",params:[{paramName:"cap",desc:"A GLenum specifying which WebGL capability to enable. Possible values:"}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enable"},{name:"frontFace",desc:"The WebGLRenderingContext.frontFace() method of the WebGL API specifies whether polygons are front- or back-facing by setting a winding orientation.",syntax:"void gl.frontFace(mode);\n",params:[{paramName:"mode",desc:"A GLenumÂ type winding orientation. The default value is gl.CCW. Possible values: gl.CW: Clock-wise winding. gl.CCW: Counter-clock-wise winding. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace"},{name:"getParameter",desc:"The WebGLRenderingContext.getParameter() method of the WebGL API returns a value for the passed parameter name.",syntax:"any gl.getParameter(pname);\n",params:[{paramName:"pname",desc:"A GLenum specifying which parameter value to return. See below for possible values."}],returnVal:"Depends on the parameter.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getParameter"},{name:"getError",desc:"The WebGLRenderingContext.getError() method of the WebGL API returns error information.",syntax:"GLenum gl.getError();\n",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getError"},{name:"hint",desc:"The WebGLRenderingContext.hint() method of the WebGL API specifies hints for certain behaviors. The interpretation of these hints depend on the implementation.",syntax:"void gl.hint(target, mode);\n",params:[{paramName:"target",desc:"Sets which behavior to be controlled. Possible values: gl.GENERATE_MIPMAP_HINT: Quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap(). When using the OES_standard_derivatives extension: ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES: Accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth. When using a WebGL 2 context, the following values are available additionally: gl.FRAGMENT_SHADER_DERIVATIVE_HINT: Same as ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES "},{paramName:"mode",desc:"Sets the behavior. The default value is gl.DONT_CARE. The possible values are: gl.FASTEST: The most efficient behavior should be used. gl.NICEST: The most correct or the highest quality option should be used. gl.DONT_CARE: There is no preference for this behavior. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/hint"},{name:"isEnabled",desc:"The WebGLRenderingContext.isEnabled() method of the WebGL API tests whether a specific WebGL capability is enabled or not for this context.",syntax:"GLboolean gl.isEnabled(cap);\n",params:[{paramName:"cap",desc:"A GLenum specifying which WebGL capability to test. Possible values:"}],returnVal:"A GLboolean indicating if the capability cap is enabled (true), or not (false).",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isEnabled"},{name:"lineWidth",desc:"The WebGLRenderingContext.lineWidth() method of the WebGL API sets the line width of rasterized lines.",syntax:"void gl.lineWidth(width);\n",params:[{paramName:"width",desc:"A GLfloat specifying the width of rasterized lines. Default value: 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/lineWidth"},{name:"pixelStorei",desc:"The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes.",syntax:"void gl.pixelStorei(pname, param);\n",params:[{paramName:"pname",desc:"A Glenum specifying which parameter to set. See below for possible values."},{paramName:"param",desc:"AÂ GLint specifying a value to set the pname parameter to. See below for possible values."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei"},{name:"polygonOffset",desc:"The WebGLRenderingContext.polygonOffset() method of the WebGL API specifies the scale factors and units to calculate depth values.",syntax:"void gl.polygonOffset(factor, units);\n",params:[{paramName:"factor",desc:"A GLfloat which sets the scale factor for the variable depth offset for each polygon. The default value is 0."},{paramName:"units",desc:"AÂ GLfloat which sets the multiplier by which an implementation-specific value is multiplied with to create a constant depth offset. The default value is 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/polygonOffset"},{name:"sampleCoverage",desc:"The WebGLRenderingContext.sampleCoverage() method of the WebGL API specifies multi-sample coverage parameters for anti-aliasing effects.",syntax:"void gl.sampleCoverage(value, invert);\n",params:[{paramName:"value",desc:"A GLclampf which sets a single floating-point coverage value clamped to the range [0,1]. The default value is 1.0."},{paramName:"invert",desc:"AÂ GLboolean which sets whether or not the coverage masks should be inverted. The default value is false."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/sampleCoverage"},{name:"stencilFunc",desc:"The WebGLRenderingContext.stencilFunc() method of the WebGL API sets the front and back function and reference value for stencil testing.",syntax:"void gl.stencilFunc(func, ref, mask);\n",params:[{paramName:"func",desc:"A GLenum specifying the test function. The default function is gl.ALWAYS. The possible values are: gl.NEVER:Â Â Â Â Â Â  Never pass. gl.LESS:Â Â Â Â Â Â Â Â  Pass if (ref & mask) <Â  (stencil & mask). gl.EQUAL:Â Â Â Â Â Â  Pass if (ref & mask) =Â  (stencil & mask). gl.LEQUAL:Â Â Â Â  Pass if (ref & mask) <= (stencil & mask). gl.GREATER:Â Â  Pass if (ref & mask) >Â  (stencil & mask). gl.NOTEQUAL: Pass if (ref & mask) != (stencil & mask). gl.GEQUAL:Â Â Â Â  Pass if (ref & mask) >= (stencil & mask). gl.ALWAYS:Â Â Â Â  Always pass. "},{paramName:"ref",desc:"A GLint specifying the reference value for the stencil test. This value is clamped to the range 0 to 2n -1 where n is the number of bitplanes in the stencil buffer. The default value is 0."},{paramName:"mask",desc:"A GLuint specifying a bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done. The default value is all 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFunc"},{name:"stencilFuncSeparate",desc:"The WebGLRenderingContext.stencilFuncSeparate() method of the WebGL API sets the front and/or back function and reference value for stencil testing.",syntax:"void gl.stencilFuncSeparate(face, func, ref, mask);\n",params:[{paramName:"face",desc:"A GLenum specifying whether the front and/or back stencil state is updated. The possible values are: gl.FRONT gl.BACK gl.FRONT_AND_BACK "},{paramName:"func",desc:"A GLenum specifying the test function. The default function is gl.ALWAYS. The possible values are: gl.NEVER:Â Â Â Â Â Â  Never pass. gl.LESS:Â Â Â Â Â Â Â Â  Pass if (ref & mask) <Â  (stencil & mask). gl.EQUAL:Â Â Â Â Â Â  Pass if (ref & mask) =Â  (stencil & mask). gl.LEQUAL:Â Â Â Â  Pass if (ref & mask) <= (stencil & mask). gl.GREATER:Â Â  Pass if (ref & mask) >Â  (stencil & mask). gl.NOTEQUAL: Pass if (ref & mask) != (stencil & mask). gl.GEQUAL:Â Â Â Â  Pass if (ref & mask) >= (stencil & mask). gl.ALWAYS:Â Â Â Â  Always pass. "},{paramName:"ref",desc:"A GLint specifying the reference value for the stencil test. This value is clamped to the range 0 to 2n -1 where n is the number of bitplanes in the stencil buffer. The default value is 0."},{paramName:"mask",desc:"A GLuint specifying a bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done. The default value is all 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate"},{name:"stencilMask",desc:"The WebGLRenderingContext.stencilMask() method of the WebGL API controls enabling and disabling of both the front and back writing of individual bits in the stencil planes.",syntax:"void gl.stencilMask(mask);\n",params:[{paramName:"mask",desc:"A GLuint specifying a bit mask to enable or disable writing of individual bits in the stencil planes. By default, the mask is all 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMask"},{name:"stencilMaskSeparate",desc:"The WebGLRenderingContext.stencilMaskSeparate() method of the WebGL API controls enabling and disabling of front and/or back writing of individual bits in the stencil planes.",syntax:"void gl.stencilMaskSeparate(face, mask);\n",params:[{paramName:"face",desc:"A GLenum specifying whether the front and/or back stencil writemask is updated. The possible values are: gl.FRONT gl.BACK gl.FRONT_AND_BACK "},{paramName:"mask",desc:"A GLuint specifying a bit mask to enable or disable writing of individual bits in the stencil planes. By default, the mask is all 1."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate"},{name:"stencilOp",desc:"The WebGLRenderingContext.stencilOp() method of the WebGL API sets both the front and back-facing stencil test actions.",syntax:"void gl.stencilOp(fail, zfail, zpass);\n",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOp"},{name:"stencilOpSeparate",desc:"The WebGLRenderingContext.stencilOpSeparate() method of the WebGL API sets the front and/or back-facing stencil test actions.",syntax:"void gl.stencilOpSeparate(face, fail, zfail, zpass);\n",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate"},{name:"bindBuffer",desc:"The WebGLRenderingContext.bindBuffer() method of the WebGL API binds a given WebGLBuffer to a target.",syntax:"void gl.bindBuffer(target, buffer);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.ARRAY_BUFFER: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data. gl.ELEMENT_ARRAY_BUFFER: Buffer used for element indices. When using a WebGL 2 context, the following values are available additionally: gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another. gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another. gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations. gl.UNIFORM_BUFFER: Buffer used for storing uniform blocks. gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations. gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations. "},{paramName:"buffer",desc:"A WebGLBuffer to bind."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer"},{name:"bufferData",desc:"The WebGLRenderingContext.bufferData() method of the WebGL API initializes and creates the buffer object's data store.",syntax:"// WebGL1: \nvoid gl.bufferData(target, size, usage); \nvoid gl.bufferData(target, ArrayBuffer? srcData, usage); \nvoid gl.bufferData(target, ArrayBufferView srcData, usage); \n\n// WebGL2: \nvoid gl.bufferData(target, ArrayBufferView srcData, usage, srcOffset, length);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.ARRAY_BUFFER: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data. gl.ELEMENT_ARRAY_BUFFER: Buffer used for element indices. When using a WebGL 2 context, the following values are available additionally: gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another. gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another. gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations. gl.UNIFORM_BUFFER: Buffer used for storing uniform blocks. gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations. gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations. "},{paramName:"size",desc:"A GLsizeiptr setting the size of the buffer object's data store."},{paramName:"srcData Optional",desc:"An ArrayBuffer,Â SharedArrayBuffer or one of the ArrayBufferView typed array types that will be copied into the data store. If null, a data store is still created, but the content is uninitialized and undefined."},{paramName:"usage",desc:"A GLenum specifying the usage pattern of the data store. Possible values: gl.STATIC_DRAW: Contents of the buffer are likely to be used often and not change often. Contents are written to the buffer, but not read. gl.DYNAMIC_DRAW: Contents of the buffer are likely to be used often and change often. Contents are written to the buffer, but not read. gl.STREAM_DRAW: Contents of the buffer are likely to not be used often. Contents are written to the buffer, but not read. When using a WebGL 2 context, the following values are available additionally: gl.STATIC_READ: Contents of the buffer are likely to be used often and not change often. Contents are read from the buffer, but not written. gl.DYNAMIC_READ: Contents of the buffer are likely to be used often and change often. Contents are read from the buffer, but not written. gl.STREAM_READ: Contents of the buffer are likely to not be used often. Contents are read from the buffer, but not written. gl.STATIC_COPY: Contents of the buffer are likely to be used often and not change often. Contents are neither written or read by the user. gl.DYNAMIC_COPY: Contents of the buffer are likely to be used often and change often. Contents are neither written or read by the user. gl.STREAM_COPY: Contents of the buffer are likely to be used often and not change often. Contents are neither written or read by the user. "},{paramName:"srcOffset",desc:"A GLuint specifying the element index offset where to start reading the buffer."},{paramName:"length Optional",desc:"A GLuint defaulting to 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData"},{name:"bufferSubData",desc:"The WebGLRenderingContext.bufferSubData() method of the WebGL API updates a subset of a buffer object's data store.",syntax:"// WebGL1: \nvoid gl.bufferSubData(target, offset, ArrayBuffer srcData); \nvoid gl.bufferSubData(target, offset, ArrayBufferView srcData); \n\n// WebGL2: \nvoid gl.bufferSubData(target, dstByteOffset, ArrayBufferView srcData, srcOffset, length);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.ARRAY_BUFFER: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data. gl.ELEMENT_ARRAY_BUFFER: Buffer used for element indices. When using a WebGL 2 context, the following values are available additionally: gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another. gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another. gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations. gl.UNIFORM_BUFFER: Buffer used for storing uniform blocks. gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations. gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations. "},{paramName:"dstByteOffset",desc:"A GLintptr specifying an offset in bytes where the data replacement will start."},{paramName:"srcData Optional",desc:"An ArrayBuffer,Â SharedArrayBuffer or one of the ArrayBufferView typed array types that will be copied into the data store."},{paramName:"srcOffset",desc:"A GLuint specifying the element index offset where to start reading the buffer."},{paramName:"length Optional",desc:"A GLuint defaulting to 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData"},{name:"createBuffer",desc:"The WebGLRenderingContext.createBuffer() method of the WebGL API creates and initializes a WebGLBuffer storing data such as vertices or colors.",syntax:"WebGLBuffer gl.createBuffer();\n",params:[],returnVal:"A WebGLBuffer storing data such as vertices or colors.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createBuffer"},{name:"deleteBuffer",desc:"The WebGLRenderingContext.deleteBuffer() method of the WebGL API deletes a given WebGLBuffer. This method has no effect if the buffer has already been deleted.",syntax:"void gl.deleteBuffer(buffer);\n",params:[{paramName:"buffer",desc:"A WebGLBuffer object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteBuffer"},{name:"getBufferParameter",desc:"The WebGLRenderingContext.getBufferParameter() method of the WebGL API returns information about the buffer.",syntax:"any gl.getBufferParameter(target, pname);\n",params:[{paramName:"target",desc:"A Glenum specifying the target buffer object. Possible values: gl.ARRAY_BUFFER: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data. gl.ELEMENT_ARRAY_BUFFER: Buffer used for element indices. When using a WebGL 2 context, the following values are available additionally: gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another. gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another. gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations. gl.UNIFORM_BUFFER: Buffer used for storing uniform blocks. gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations. gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations. "},{paramName:"pname",desc:"A Glenum specifying information to query. Possible values: gl.BUFFER_SIZE: Returns a GLint indicating the size of the buffer in bytes. gl.BUFFER_USAGE: Returns a GLenum indicating the usage pattern of the buffer. This is either: gl.STATIC_DRAW, gl.DYNAMIC_DRAW, gl.STREAM_DRAW. When using a WebGL 2 context, the following values are available additionally: gl.STATIC_READ, gl.DYNAMIC_READ, gl.STREAM_READ, gl.STATIC_COPY, gl.DYNAMIC_COPY, gl.STREAM_COPY. "}],returnVal:"Depends on the requested information (as specified with pname). Either a GLint or a GLenum.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getBufferParameter"},{name:"isBuffer",desc:"The WebGLRenderingContext.isBuffer() method of the WebGL API returns true if the passed WebGLBuffer is valid and false otherwise.",syntax:"GLboolean gl.isBuffer(buffer);\n",params:[{paramName:"buffer",desc:"A WebGLBuffer to check."}],returnVal:"A GLboolean indicating whether or not the buffer is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isBuffer"},{name:"bindFramebuffer",desc:"The WebGLRenderingContext.bindFramebuffer() method of the WebGL API binds a given WebGLFramebuffer to a target.",syntax:"void gl.bindFramebuffer(target, framebuffer);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.FRAMEBUFFER: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image. When using a WebGL 2 context, the following values are available additionally: gl.DRAW_FRAMEBUFFER: Equivalent to gl.FRAMEBUFFER. Used as a destination for drawing, rendering, clearing, and writing operations. gl.READ_FRAMEBUFFER: Used as a source for reading operations. "},{paramName:"framebuffer",desc:"A WebGLFramebuffer object to bind."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer"},{name:"checkFramebufferStatus",desc:"The WebGLRenderingContext.checkFramebufferStatus() method of the WebGL API returns the completeness status of the WebGLFramebuffer object.",syntax:"GLenum gl.checkFramebufferStatus(target);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.FRAMEBUFFER: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image. When using a WebGL 2 context, the following values are available additionally: gl.DRAW_FRAMEBUFFER: Equivalent to gl.FRAMEBUFFER. Used as a destination for drawing, rendering, clearing, and writing operations. gl.READ_FRAMEBUFFER: Used as a source for reading operations. "}],returnVal:"A GLenum indicating the completeness status of the framebuffer or 0 if an error occurs. Possible enum return values:",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus"},{name:"createFramebuffer",desc:"The WebGLRenderingContext.createFramebuffer() method of the WebGL API creates and initializes a WebGLFramebuffer object.",syntax:"WebGLFramebuffer gl.createFramebuffer();\n",params:[],returnVal:"A WebGLFramebuffer object.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createFramebuffer"},{name:"deleteFramebuffer",desc:"The WebGLRenderingContext.deleteFramebuffer() method of the WebGL API deletes a given WebGLFramebuffer object. This method has no effect if the frame buffer has already been deleted.",syntax:"void gl.deleteFramebuffer(framebuffer);\n",params:[{paramName:"framebuffer",desc:"A WebGLFramebuffer object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteFramebuffer"},{name:"framebufferRenderbuffer",desc:"The WebGLRenderingContext.framebufferRenderbuffer() method of the WebGL API attaches a WebGLRenderbuffer object to a WebGLFramebuffer object.",syntax:"void gl.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) for the framebuffer. Possible values: gl.FRAMEBUFFER: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image. When using a WebGL 2 context, the following values are available additionally: gl.DRAW_FRAMEBUFFER: Equivalent to gl.FRAMEBUFFER. Used as a destination for drawing, rendering, clearing, and writing operations. gl.READ_FRAMEBUFFER: Used as a source for reading operations. "},{paramName:"attachment",desc:"A GLenum specifying the attachment point for the render buffer. Possible values: gl.COLOR_ATTACHMENT0: color buffer. gl.DEPTH_ATTACHMENT: depth buffer. gl.DEPTH_STENCIL_ATTACHMENT: depth and stencil buffer. gl.STENCIL_ATTACHMENT: stencil buffer. When using a WebGL 2 context, the following values are available additionally: gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15 When using the WEBGL_draw_buffers extension: ext.COLOR_ATTACHMENT0_WEBGL (same as gl.COLOR_ATTACHMENT0) ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL "},{paramName:"renderbuffertarget",desc:"A GLenum specifying the binding point (target) for the render buffer. Possible values: gl.RENDERBUFFER: Buffer data storage for single images in a renderable internal format. "},{paramName:"renderbuffer",desc:"A WebGLRenderbuffer object to attach."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer"},{name:"framebufferTexture2D",desc:"The WebGLRenderingContext.framebufferTexture2D() method of the WebGL API attaches a texture to a WebGLFramebuffer.",syntax:"void gl.framebufferTexture2D(target, attachment, textarget, texture, level);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.FRAMEBUFFER: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image. When using a WebGL 2 context, the following values are available additionally: gl.DRAW_FRAMEBUFFER: Equivalent to gl.FRAMEBUFFER. Used as a destination for drawing, rendering, clearing, and writing operations. gl.READ_FRAMEBUFFER: Used as a source for reading operations. "},{paramName:"attachment",desc:"A GLenum specifying the attachment point for the texture. Possible values: gl.COLOR_ATTACHMENT0: Attaches the texture to the framebuffer's color buffer. gl.DEPTH_ATTACHMENT: Attaches the texture to the framebuffer's depth buffer. gl.STENCIL_ATTACHMENT: Attaches the texture to the framebuffer's stencil buffer. When using a WebGL 2 context, the following values are available additionally: gl.DEPTH_STENCIL_ATTACHMENT: depth and stencil buffer. gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15 When using the WEBGL_draw_buffers extension: ext.COLOR_ATTACHMENT0_WEBGL (same as gl.COLOR_ATTACHMENT0) ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL When using the WEBGL_depth_texture extension: ext.DEPTH_STENCIL_ATTACHMENT: Depth and stencil buffer data storage. "},{paramName:"textarget",desc:"A GLenum specifying the texture target. Possible values: gl.TEXTURE_2D: A 2D image. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Image for the positive X face of the cube. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Image for the negative X face of the cube. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Image for the positive Y face of the cube. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Image for the negative Y face of the cube. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Image for the positive Z face of the cube. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Image for the negative Z face of the cube. "},{paramName:"texture",desc:"A WebGLTexture object whose image to attach."},{paramName:"level",desc:"A GLint specifying the mipmap level of the texture image to be attached. Must be 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D"},{name:"getFramebufferAttachmentParameter",desc:"The WebGLRenderingContext.getFramebufferAttachmentParameter() method of the WebGL API returns information about a framebuffer's attachment.",syntax:"any gl.getFramebufferAttachmentParameter(target, attachment, pname);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.FRAMEBUFFER: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image. When using a WebGL 2 context, the following values are available additionally: gl.DRAW_FRAMEBUFFER: Equivalent to gl.FRAMEBUFFER. Used as a destination for drawing, rendering, clearing, and writing operations. gl.READ_FRAMEBUFFER: Used as a source for reading operations. "},{paramName:"attachment",desc:"A GLenum specifying the attachment point for the texture. Possible values: gl.COLOR_ATTACHMENT0: Texture attachment for the framebuffer's color buffer. gl.DEPTH_ATTACHMENT: Texture attachment for the framebuffer's depth buffer. gl.STENCIL_ATTACHMENT: Texture attachment for the framebuffer's stencil buffer. gl.DEPTH_STENCIL_ATTACHMENT: Texture attachment for both, the depth and stencil buffer. When using a WebGL 2 context, the following values are available additionally: gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15 When using the WEBGL_draw_buffers extension: ext.COLOR_ATTACHMENT0_WEBGL (same as gl.COLOR_ATTACHMENT0) ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL "},{paramName:"pname",desc:"A GLenum specifying information to query. Possible values: gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: The type which contains the attached image. gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: The texture or renderbuffer of the attached image (WebGLRenderbuffer or WebGLTexture). gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: Mipmap level. Default value: 0. gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: The name of cube-map face of the texture. When using the EXT_sRGB extension: ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: The framebuffer color encoding. When using a WebGL 2 context, the following values are available additionally: gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER "}],returnVal:"Depends on the requested information (as specified with pname). Either a GLint, a GLenum, a WebGLRenderbuffer, or a WebGLTexture.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter"},{name:"isFramebuffer",desc:"The WebGLRenderingContext.isFramebuffer() method of the WebGL API returns true if the passed WebGLFramebuffer is valid and false otherwise.",syntax:"GLboolean gl.isFramebuffer(framebuffer);\n",params:[{paramName:"framebuffer",desc:"A WebGLFramebuffer to check."}],returnVal:"A GLboolean indicating whether or not the frame buffer is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isFramebuffer"},{name:"readPixels",desc:"The WebGLRenderingContext.readPixels() method of the WebGL API reads a block of pixels from a specified rectangle of the current color framebuffer into an ArrayBufferView object.",syntax:"// WebGL1: \nvoid gl.readPixels(x, y, width, height, format, type, pixels); \n\n// WebGL2: \nvoid gl.readPixels(x, y, width, height, format, type, GLintptr offset); \nvoid gl.readPixels(x, y, width, height, format, type, ArrayBufferView pixels, GLuint dstOffset);\n",params:[{paramName:"x",desc:"A GLint specifying the firstÂ horizontal pixel that is read from the lower left corner of a rectangular block of pixels."},{paramName:"y",desc:"A GLint specifying the first vertical pixel that is read from the lower left corner of a rectangular block of pixels."},{paramName:"width",desc:"A GLsizei specifying the width of the rectangle."},{paramName:"height",desc:"A GLsizei specifying the height of the rectangle."},{paramName:"format",desc:"A GLenum specifying the format of the pixel data. Possible values: gl.ALPHA: Discards the red, green and blue components and reads the alpha component. gl.RGB: Discards the alpha components and reads the red, green and blue components. gl.RGBA: Red, green, blue and alpha components are read from the color buffer. WebGL2 adds gl.RED gl.RG gl.RED_INTEGER gl.RG_INTEGER gl.RGB_INTEGER gl.RGBA_INTEGER "},{paramName:"type",desc:"A GLenum specifying the data type of the pixel data. Possible values: gl.UNSIGNED_BYTE gl.UNSIGNED_SHORT_5_6_5 gl.UNSIGNED_SHORT_4_4_4_4 gl.UNSIGNED_SHORT_5_5_5_1 gl.FLOAT WebGL2 adds gl.BYTE gl.UNSIGNED_INT_2_10_10_10_REV gl.HALF_FLOAT gl.SHORT gl.UNSIGNED_SHORT gl.INT gl.UNSIGNED_INT gl.UNSIGNED_INT_10F_11F_11F_REV gl.UNSIGNED_INT_5_9_9_9_REV "},{paramName:"pixels",desc:"An ArrayBufferView object to read data into. The array type must match the type of the type parameter. Uint8Array for gl.UNSIGNED_BYTE. Uint16Array for gl.UNSIGNED_SHORT_5_6_5, gl.UNSIGNED_SHORT_4_4_4_4, or gl.UNSIGNED_SHORT_5_5_5_1. Float32Array for gl.FLOAT. "},{paramName:"dstOffset Optional",desc:"Offset. Defaults to 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels"},{name:"bindRenderbuffer",desc:"The WebGLRenderingContext.bindRenderbuffer() method of the WebGL API binds a given WebGLRenderbuffer to a target, which must be gl.RENDERBUFFER.",syntax:"void gl.bindRenderbuffer(target, renderbuffer);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.RENDERBUFFER: Buffer data storage for single images in a renderable internal format. "},{paramName:"renderbuffer",desc:"A WebGLRenderbuffer object to bind."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindRenderbuffer"},{name:"createRenderbuffer",desc:"The WebGLRenderingContext.createRenderbuffer() method of the WebGL API creates and initializes a WebGLRenderbuffer object.",syntax:"WebGLRenderbuffer gl.createRenderbuffer();\n",params:[],returnVal:"A WebGLRenderbuffer object that stores data such an image, or can be source or target of an rendering operation.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createRenderbuffer"},{name:"deleteRenderbuffer",desc:"The WebGLRenderingContext.deleteRenderbuffer() method of the WebGL API deletes a given WebGLRenderbuffer object. This method has no effect if the render buffer has already been deleted.",syntax:"void gl.deleteRenderbuffer(renderbuffer);\n",params:[{paramName:"renderbuffer",desc:"A WebGLRenderbuffer object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer"},{name:"getRenderbufferParameter",desc:"The WebGLRenderingContext.getRenderbufferParameter() method of the WebGL API returns information about the renderbuffer.",syntax:"any gl.getRenderbufferParameter(target, pname);\n",params:[{paramName:"target",desc:"A Glenum specifying the target renderbuffer object. Possible values: gl.RENDERBUFFER: Buffer data storage for single images in a renderable internal format. "},{paramName:"pname",desc:"A Glenum specifying the information to query. Possible values: gl.RENDERBUFFER_WIDTH: Returns a GLint indicating the width of the image of the currently bound renderbuffer. gl.RENDERBUFFER_HEIGHT: Returns a GLint indicating the height of the image of the currently bound renderbuffer. gl.RENDERBUFFER_INTERNAL_FORMAT: Returns a GLenum indicating the internal format of the currently bound renderbuffer. The default is gl.RGBA4. Possible return values: gl.RGBA4: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits. gl.RGB565: 5 red bits, 6 green bits, 5 blue bits. gl.RGB5_A1: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit. gl.DEPTH_COMPONENT16: 16 depth bits. gl.STENCIL_INDEX8: 8 stencil bits. gl.RENDERBUFFER_GREEN_SIZE: Returns a GLint that is the resolution size (in bits) for the green color. gl.RENDERBUFFER_BLUE_SIZE: Returns a GLint that is the resolution size (in bits) for the blue color. gl.RENDERBUFFER_RED_SIZE: Returns a GLint that is the resolution size (in bits) for the red color. gl.RENDERBUFFER_ALPHA_SIZE: Returns a GLint that is the resolution size (in bits) for the alpha component. gl.RENDERBUFFER_DEPTH_SIZE: Returns a GLint that is the resolution size (in bits) for the depth component. gl.RENDERBUFFER_STENCIL_SIZE: Returns a GLint that is the resolution size (in bits) for the stencil component. When using a WebGL 2 context, the following value is available additionally: gl.RENDERBUFFER_SAMPLES: Returns a GLint indicating the number of samples of the image of the currently bound renderbuffer. "}],returnVal:"Depends on the requested information (as specified with pname). Either a GLint or a GLenum.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter"},{name:"isRenderbuffer",desc:"The WebGLRenderingContext.isRenderbuffer() method of the WebGL API returns true if the passed WebGLRenderbuffer is valid and false otherwise.",syntax:"GLboolean gl.isRenderbuffer(renderbuffer);\n",params:[{paramName:"renderbuffer",desc:"A WebGLRenderbuffer to check."}],returnVal:"A GLboolean indicating whether or not the renderbuffer is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isRenderbuffer"},{name:"renderbufferStorage",desc:"The WebGLRenderingContext.renderbufferStorage() method of the WebGL API creates and initializes a renderbuffer object's data store.",syntax:"void gl.renderbufferStorage(target, internalFormat, width, height);\n",params:[{paramName:"target",desc:"A Glenum specifying the target renderbuffer object. Possible values: gl.RENDERBUFFER: Buffer data storage for single images in a renderable internal format. "},{paramName:"internalFormat",desc:"A Glenum specifying the internal format of the renderbuffer. Possible values: gl.RGBA4: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits. gl.RGB565: 5 red bits, 6 green bits, 5 blue bits. gl.RGB5_A1: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit. gl.DEPTH_COMPONENT16: 16 depth bits. gl.STENCIL_INDEX8: 8 stencil bits. gl.DEPTH_STENCIL When using a WebGL 2 context, the following values are available additionally: gl.R8 gl.R8UI gl.R8I gl.R16UI gl.R16I gl.R32UI gl.R32I gl.RG8 gl.RG8UI gl.RG8I gl.RG16UI gl.RG16I gl.RG32UI gl.RG32I gl.RGB8 gl.RGBA8 gl.SRGB8_ALPHA8 (also available as an extension for WebGL 1, see below) gl.RGB10_A2 gl.RGBA8UI gl.RGBA8I gl.RGB10_A2UI gl.RGBA16UI gl.RGBA16I gl.RGBA32I gl.RGBA32UI gl.DEPTH_COMPONENT24 gl.DEPTH_COMPONENT32F gl.DEPTH24_STENCIL8 gl.DEPTH32F_STENCIL8 When using the WEBGL_color_buffer_float extension: ext.RGBA32F_EXT: RGBA 32-bit floating-point type. ext.RGB32F_EXT: RGB 32-bit floating-point type. When using the EXT_sRGB extension: ext.SRGB8_ALPHA8_EXT: 8-bit sRGB and alpha. When using a WebGL 2 context and the EXT_color_buffer_float extension: gl.R16F gl.RG16F gl.RGBA16F gl.R32F gl.RG32F gl.RGBA32F gl.R11F_G11F_B10F "},{paramName:"width",desc:"A GLsizei specifying the width of the renderbuffer in pixels."},{paramName:"height",desc:"A GLsizei specifying the height of the renderbuffer in pixels."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage"},{name:"bindTexture",desc:"The WebGLRenderingContext.bindTexture() method of the WebGL API binds a given WebGLTexture to a target (binding point).",syntax:"void gl.bindTexture(target, texture);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP: A cube-mapped texture. When using a WebGL 2 context, the following values are available additionally: gl.TEXTURE_3D: A three-dimensional texture. gl.TEXTURE_2D_ARRAY: A two-dimensional array texture. "},{paramName:"texture",desc:"A WebGLTexture object to bind."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindTexture"},{name:"compressedTexImage2D",desc:"The WebGLRenderingContext.compressedTexImage2D()Â  andÂ WebGL2RenderingContext.compressedTexImage3D() methods of the WebGL API specify a two- or three-dimensional texture image in a compressed format.",syntax:"// WebGL 1:\nvoid gl.compressedTexImage2D(target, level, internalformat, width, height, border, ArrayBufferView? pixels);\n\n// Additionally available in WebGL 2: \n// read from buffer bound to gl.PIXEL_UNPACK_BUFFER\nvoid gl.compressedTexImage2D(target, level, internalformat, width, height, border, GLsizei imageSize, GLintptr offset); \nvoid gl.compressedTexImage2D(target, level, internalformat, width, height, border,\n                             ArrayBufferView srcData, optional srcOffset, optional srcLengthOverride);\n\n // read from buffer bound to gl.PIXEL_UNPACK_BUFFER\nvoid gl.compressedTexImage3D(target, level, internalformat, width, height, depth, border, GLsizei imageSize, GLintptr offset); \nvoid gl.compressedTexImage3D(target, level, internalformat, width, height, depth, border, \n                             ArrayBufferView srcData, optional srcOffset, optional srcLengthOverride);",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture. Possible values for compressedTexImage2D: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. Possible values for compressedTexImage3D: gl.TEXTURE_2D_ARRAY gl.TEXTURE_3D "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"internalformat",desc:"A GLenum specifying the compressed image format. Compressed image formats must be enabled by WebGL extensions before using this method. All values are possible for compressedTexImage2D. See compressed texture formats for which are valid for compressedTexImage3D. Possible values: When using the WEBGL_compressed_texture_s3tc extension: ext.COMPRESSED_RGB_S3TC_DXT1_EXT ext.COMPRESSED_RGBA_S3TC_DXT1_EXT ext.COMPRESSED_RGBA_S3TC_DXT3_EXT ext.COMPRESSED_RGBA_S3TC_DXT5_EXT When using the WEBGL_compressed_texture_s3tc_srgb extension: ext.COMPRESSED_SRGB_S3TC_DXT1_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT When using the WEBGL_compressed_texture_etc extension: ext.COMPRESSED_R11_EAC ext.COMPRESSED_SIGNED_R11_EAC ext.COMPRESSED_RG11_EAC ext.COMPRESSED_SIGNED_RG11_EAC ext.COMPRESSED_RGB8_ETC2 ext.COMPRESSED_RGBA8_ETC2_EAC ext.COMPRESSED_SRGB8_ETC2 ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 When using the WEBGL_compressed_texture_pvrtc extension: ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG When using the WEBGL_compressed_texture_etc1 extension: ext.COMPRESSED_RGB_ETC1_WEBGL When using the WEBGL_compressed_texture_atc extension: ext.COMPRESSED_RGB_ATC_WEBGL ext.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL ext.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL When using the WEBGL_compressed_texture_astc extension: ext.COMPRESSED_RGBA_ASTC_4x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR ext.COMPRESSED_RGBA_ASTC_5x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR ext.COMPRESSED_RGBA_ASTC_5x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR ext.COMPRESSED_RGBA_ASTC_6x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR ext.COMPRESSED_RGBA_ASTC_6x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR ext.COMPRESSED_RGBA_ASTC_8x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR ext.COMPRESSED_RGBA_ASTC_8x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR ext.COMPRESSED_RGBA_ASTC_8x8_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR ext.COMPRESSED_RGBA_ASTC_10x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR ext.COMPRESSED_RGBA_ASTC_10x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR ext.COMPRESSED_RGBA_ASTC_10x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR ext.COMPRESSED_RGBA_ASTC_12x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR ext.COMPRESSED_RGBA_ASTC_12x12_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR When using the EXT_texture_compression_bptc extension: ext.COMPRESSED_RGBA_BPTC_UNORM_EXT ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT When using the EXT_texture_compression_rgtc extension: ext.COMPRESSED_RED_RGTC1_EXT ext.COMPRESSED_SIGNED_RED_RGTC1_EXT ext.COMPRESSED_RED_GREEN_RGTC2_EXT ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT "},{paramName:"width",desc:"A GLsizei specifying the width of the texture."},{paramName:"height",desc:"A GLsizei specifying the height of the texture."},{paramName:"depth",desc:"A GLsizei specifying the depth of the texture/the number of textures in a TEXTURE_2D_ARRAY."},{paramName:"border",desc:"A GLint specifying the width of the border. Must be 0."},{paramName:"imageSize",desc:"A GLsizei specifying the number of bytes to read from the buffer bound to gl.PIXEL_UNPACK_BUFFER."},{paramName:"offset",desc:"A GLintptr specifying the offset in bytes from which to read from the buffer bound to gl.PIXEL_UNPACK_BUFFER."},{paramName:"pixels",desc:"An ArrayBufferView that be used as a data store for the compressed image data in memory."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexImage2D"},{name:"compressedTexSubImage2D",desc:"The WebGLRenderingContext.compressedTexSubImage2D() method of the WebGL API specifies a two-dimensional sub-rectangle for a texture image in a compressed format.",syntax:"// WebGL 1:\nvoid gl.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, ArrayBufferView? pixels);\n\n// Additionally available in WebGL 2:\nvoid gl.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, offset); \nvoid gl.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, ArrayBufferView srcData, optional srcOffset, optional srcLengthOverride);\n\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active compressed texture. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"xoffset",desc:"A GLint specifying the horizontal offset within the compressed texture image."},{paramName:"yoffset",desc:"AÂ GLint specifying the vertical offset within the compressed texture image."},{paramName:"width",desc:"A GLsizei specifying the width of the compressed texture."},{paramName:"height",desc:"A GLsizei specifying the height of the compressed texture."},{paramName:"format",desc:"A GLenum specifying the compressed image format. Compressed image formats must be enabled by WebGL extensions before using this method. Possible values: When using the WEBGL_compressed_texture_s3tc extension: ext.COMPRESSED_RGB_S3TC_DXT1_EXT ext.COMPRESSED_RGBA_S3TC_DXT1_EXT ext.COMPRESSED_RGBA_S3TC_DXT3_EXT ext.COMPRESSED_RGBA_S3TC_DXT5_EXT When using the WEBGL_compressed_texture_s3tc_srgb extension: ext.COMPRESSED_SRGB_S3TC_DXT1_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT When using the WEBGL_compressed_texture_etc extension: ext.COMPRESSED_R11_EAC ext.COMPRESSED_SIGNED_R11_EAC ext.COMPRESSED_RG11_EAC ext.COMPRESSED_SIGNED_RG11_EAC ext.COMPRESSED_RGB8_ETC2 ext.COMPRESSED_RGBA8_ETC2_EAC ext.COMPRESSED_SRGB8_ETC2 ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 When using the WEBGL_compressed_texture_pvrtc extension: ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG When using the WEBGL_compressed_texture_atc extension: ext.COMPRESSED_RGB_ATC_WEBGL ext.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL ext.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL When using the WEBGL_compressed_texture_astc extension: ext.COMPRESSED_RGBA_ASTC_4x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR ext.COMPRESSED_RGBA_ASTC_5x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR ext.COMPRESSED_RGBA_ASTC_5x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR ext.COMPRESSED_RGBA_ASTC_6x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR ext.COMPRESSED_RGBA_ASTC_6x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR ext.COMPRESSED_RGBA_ASTC_8x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR ext.COMPRESSED_RGBA_ASTC_8x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR ext.COMPRESSED_RGBA_ASTC_8x8_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR ext.COMPRESSED_RGBA_ASTC_10x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR ext.COMPRESSED_RGBA_ASTC_10x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR ext.COMPRESSED_RGBA_ASTC_10x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR ext.COMPRESSED_RGBA_ASTC_10x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR ext.COMPRESSED_RGBA_ASTC_12x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR ext.COMPRESSED_RGBA_ASTC_12x12_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR When using the EXT_texture_compression_bptc extension: ext.COMPRESSED_RGBA_BPTC_UNORM_EXT ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT When using the EXT_texture_compression_rgtc extension: ext.COMPRESSED_RED_RGTC1_EXT ext.COMPRESSED_SIGNED_RED_RGTC1_EXT ext.COMPRESSED_RED_GREEN_RGTC2_EXT ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT "},{paramName:"imageSize",desc:"A GLsizei specifying the number of bytes to read from the buffer bound to gl.PIXEL_UNPACK_BUFFER."},{paramName:"offset",desc:"A GLintptr specifying the offset in bytes from which to read from the buffer bound to gl.PIXEL_UNPACK_BUFFER."},{paramName:"pixels",desc:"An ArrayBufferView that be used as a data store for the compressed image data in memory."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D"},{name:"copyTexImage2D",desc:"The WebGLRenderingContext.copyTexImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture image.",syntax:"void gl.copyTexImage2D(target, level, internalformat, x, y, width, height, border);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"internalformat",desc:"A GLenum specifying the color components in the texture. Possible values: gl.ALPHA: Discards the red, green and blue components and reads the alpha component. gl.RGB: Discards the alpha components and reads the red, green and blue components. gl.RGBA: Red, green, blue and alpha components are read from the color buffer. gl.LUMINANCE: Each color component is a luminance component, alpha is 1.0. gl.LUMINANCE_ALPHA: Each component is a luminance/alpha component. "},{paramName:"x",desc:"A GLint specifying the x coordinate of the lower left corner where to start copying."},{paramName:"y",desc:"A GLint specifying the y coordinate of the lower left corner where to start copying."},{paramName:"width",desc:"A GLsizei specifying the width of the texture."},{paramName:"height",desc:"A GLsizei specifying the height of the texture."},{paramName:"border",desc:"A GLint specifying the width of the border. Must be 0."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D"},{name:"copyTexSubImage2D",desc:"The WebGLRenderingContext.copyTexSubImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into an existing 2D texture sub-image.",syntax:"void gl.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"xoffset",desc:"A GLint specifying the horizontal offset within the texture image."},{paramName:"yoffset",desc:"A GLint specifying the vertical offset within the texture image."},{paramName:"x",desc:"A GLint specifying the x coordinate of the lower left corner where to start copying."},{paramName:"y",desc:"A GLint specifying the y coordinate of the lower left corner where to start copying."},{paramName:"width",desc:"A GLsizei specifying the width of the texture."},{paramName:"height",desc:"A GLsizei specifying the height of the texture."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D"},{name:"createTexture",desc:"The WebGLRenderingContext.createTexture() method of the WebGL API creates and initializes a WebGLTexture object.",syntax:"WebGLTexture gl.createTexture();\n",params:[],returnVal:"A WebGLTexture object to which images can be bound to.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createTexture"},{name:"deleteTexture",desc:"The WebGLRenderingContext.deleteTexture() method of the WebGL API deletes a given WebGLTexture object. This method has no effect if the texture has already been deleted.",syntax:"void gl.deleteTexture(texture);\n",params:[{paramName:"texture",desc:"A WebGLTexture object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteTexture"},{name:"generateMipmap",desc:"The WebGLRenderingContext.generateMipmap() method of the WebGL API generates a set of mipmaps for a WebGLTexture object.",syntax:"void gl.generateMipmap(target);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture whose mipmaps will be generated. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP: A cube-mapped texture. When using a WebGL 2 context, the following values are available additionally: gl.TEXTURE_3D: A three-dimensional texture. gl.TEXTURE_2D_ARRAY: A two-dimensional array texture. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/generateMipmap"},{name:"getTexParameter",desc:"The WebGLRenderingContext.getTexParameter() method of the WebGL API returns information about the given texture.",syntax:"any gl.getTexParameter(target, pname);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP: A cube-mapped texture. When using a WebGL 2 context, the following values are available additionally: gl.TEXTURE_3D: A three-dimensional texture. gl.TEXTURE_2D_ARRAY: A two-dimensional array texture. "},{paramName:"pname",desc:"A Glenum specifying the information to query. Possible values: pname Return type Description Possible return values Available in a WebGL 1 context gl.TEXTURE_MAG_FILTER GLenum Texture magnification filter gl.LINEAR (default value), gl.NEAREST. gl.TEXTURE_MIN_FILTER GLenum Texture minification filter gl.LINEAR, gl.NEAREST, gl.NEAREST_MIPMAP_NEAREST, gl.LINEAR_MIPMAP_NEAREST, gl.NEAREST_MIPMAP_LINEAR (default value), gl.LINEAR_MIPMAP_LINEAR. gl.TEXTURE_WRAP_S GLenum Wrapping function for texture coordinate s gl.REPEAT (default value), gl.CLAMP_TO_EDGE, gl.MIRRORED_REPEAT. gl.TEXTURE_WRAP_T GLenum Wrapping function for texture coordinate t gl.REPEAT (default value), gl.CLAMP_TO_EDGE, gl.MIRRORED_REPEAT. Additionally available when using the EXT_texture_filter_anisotropic extension ext.TEXTURE_MAX_ANISOTROPY_EXT GLfloat Maximum anisotropy for a texture Any float values. Additionally available when using a WebGL 2 context gl.TEXTURE_BASE_LEVEL GLint Texture mipmap level Any int values. gl.TEXTURE_COMPARE_FUNC GLenum Comparison function gl.LEQUAL (default value), gl.GEQUAL, gl.LESS, gl.GREATER, gl.EQUAL, gl.NOTEQUAL, gl.ALWAYS, gl.NEVER. gl.TEXTURE_COMPARE_MODE GLenum Texture comparison mode gl.NONE (default value), gl.COMPARE_REF_TO_TEXTURE. gl.TEXTURE_IMMUTABLE_FORMAT GLboolean Immutability of the texture format and size true or false. gl.TEXTURE_IMMUTABLE_LEVELS GLuint ? Any uint values. gl.TEXTURE_MAX_LEVEL GLint Maximum texture mipmap array level Any int values. gl.TEXTURE_MAX_LOD GLfloat Texture maximum level-of-detail value Any float values. gl.TEXTURE_MIN_LOD GLfloat Texture minimum level-of-detail value Any float values. gl.TEXTURE_WRAP_R GLenum Wrapping function for texture coordinate r gl.REPEAT (default value), gl.CLAMP_TO_EDGE, gl.MIRRORED_REPEAT. "}],returnVal:"Returns the requested texture information (as specified with pname). If an error occurs, null is returned.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter"},{name:"isTexture",desc:"The WebGLRenderingContext.isTexture() method of the WebGL API returns true if the passed WebGLTexture is valid and false otherwise.",syntax:"GLboolean gl.isTexture(texture);\n",params:[{paramName:"texture",desc:"A WebGLTexture to check."}],returnVal:"A GLboolean indicating whether or not the texture is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isTexture"},{name:"texImage2D",desc:"The WebGLRenderingContext.texImage2D() method of the WebGL API specifies a two-dimensional texture image.",syntax:"// WebGL1:\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, ArrayBufferView? pixels);\nvoid gl.texImage2D(target, level, internalformat, format, type, ImageData? pixels);\nvoid gl.texImage2D(target, level, internalformat, format, type, HTMLImageElement? pixels);\nvoid gl.texImage2D(target, level, internalformat, format, type, HTMLCanvasElement? pixels);\nvoid gl.texImage2D(target, level, internalformat, format, type, HTMLVideoElement? pixels);\nvoid gl.texImage2D(target, level, internalformat, format, type, ImageBitmap? pixels);\n\n// WebGL2:\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, GLintptr offset);\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLCanvasElement source);\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLImageElement source); \nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLVideoElement source); \nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, ImageBitmap source);\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, ImageData source);\nvoid gl.texImage2D(target, level, internalformat, width, height, border, format, type, ArrayBufferView srcData, srcOffset);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"internalformat",desc:"A GLenum specifying the color components in the texture."},{paramName:"\n \n  \n   \n    Format\n    Type\n    Channels\n    Bytes per pixel\n   \n  \n  \n   \n    RGBA\n    UNSIGNED_BYTE\n    4\n    4\n   \n   \n    RGB\n    UNSIGNED_BYTE\n    3\n    3\n   \n   \n    RGBA\n    UNSIGNED_SHORT_4_4_4_4\n    4\n    2\n   \n   \n    RGBA\n    UNSIGNED_SHORT_5_5_5_1\n    4\n    2\n   \n   \n    RGB\n    UNSIGNED_SHORT_5_6_5\n    3\n    2\n   \n   \n    LUMINANCE_ALPHA\n    UNSIGNED_BYTE\n    2\n    2\n   \n   \n    LUMINANCE\n    UNSIGNED_BYTE\n    1\n    1\n   \n   \n    ALPHA\n    UNSIGNED_BYTE\n    1\n    1\n   \n  \n \n ",desc:"Possible values in both WebGL1 and WebGL2"}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D"},{name:"texSubImage2D",desc:"The WebGLRenderingContext.texSubImage2D() method of the WebGL API specifies a sub-rectangle of the current texture.",syntax:"// WebGL 1:\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, ArrayBufferView? pixels);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, ImageData? pixels);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, HTMLImageElement? pixels);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, HTMLCanvasElement? pixels);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, HTMLVideoElement? pixels);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, ImageBitmap? pixels);\n\n// WebGL 2:\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, format, type, GLintptr offset);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, HTMLCanvasElement source);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, HTMLImageElement source);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, HTMLVideoElement source); \nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, ImageBitmap source); \nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, ImageData source);\nvoid gl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, ArrayBufferView srcData, srcOffset);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target) of the active texture. Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP_POSITIVE_X: Positive X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Negative X face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Positive Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Negative Y face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Positive Z face for a cube-mapped texture. gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Negative Z face for a cube-mapped texture. "},{paramName:"level",desc:"A GLint specifying the level of detail. Level 0 is the base image level and level n is the nth mipmap reduction level."},{paramName:"xoffset",desc:"A GLint specifying the lower left texel x coordinate of a width-wide by height-wide rectangular subregion of the texture array."},{paramName:"yoffset",desc:"A GLint specifying the lower left texel y coordinate of a width-wide by height-wide rectangular subregion of the texture array.."},{paramName:"width",desc:"A GLsizei specifying the width of the texture in texels."},{paramName:"height",desc:"A GLsizei specifying the height of the texture in texels."},{paramName:"format",desc:"A GLenum specifying the format of the texel data. Possible values: gl.ALPHA: Discards the red, green and blue components and reads the alpha component. gl.RGB: Discards the alpha components and reads the red, green and blue components. gl.RGBA: Red, green, blue and alpha components are read from the color buffer. gl.LUMINANCE: Each color component is a luminance component, alpha is 1.0. gl.LUMINANCE_ALPHA: Each component is a luminance/alpha component. When using the EXT_sRGB extension: ext.SRGB_EXT ext.SRGB_ALPHA_EXT When using a WebGL 2 context, the following values are available additionally: gl.RED gl.RG gl.RED_INTEGER gl.RG_INTEGER gl.RGB_INTEGER gl.RGBA_INTEGER "},{paramName:"type",desc:"A GLenum specifying the data type of the texel data. Possible values: gl.UNSIGNED_BYTE: 8 bits per channel for gl.RGBA gl.UNSIGNED_SHORT_5_6_5: 5 red bits, 6 green bits, 5 blue bits. gl.UNSIGNED_SHORT_4_4_4_4: 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits. gl.UNSIGNED_SHORT_5_5_5_1: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit. When using the OES_texture_float extension: gl.FLOAT When using the OES_texture_half_float extension: gl.HALF_FLOAT_OES When using a WebGL 2 context, the following values are available additionally: gl.BYTE gl.UNSIGNED_SHORT gl.SHORT gl.UNSIGNED_INT gl.INT gl.HALF_FLOAT gl.FLOAT gl.UNSIGNED_INT_2_10_10_10_REV gl.UNSIGNED_INT_10F_11F_11F_REV gl.UNSIGNED_INT_5_9_9_9_REV gl.UNSIGNED_INT_24_8 gl.FLOAT_32_UNSIGNED_INT_24_8_REV (pixels must be null) "},{paramName:"pixels",desc:"One of the following objects can be used as a pixel source for the texture: ArrayBufferView, A Uint8Array must be used if type is gl.UNSIGNED_BYTE. A Uint16Array must be used if type is either gl.UNSIGNED_SHORT_5_6_5, gl.UNSIGNED_SHORT_4_4_4_4, gl.UNSIGNED_SHORT_5_5_5_1, or ext.HALF_FLOAT_OES. A Float32Array must be used if type is gl.FLOAT. ImageData, HTMLImageElement, HTMLCanvasElement, HTMLVideoElement, ImageBitmap. "},{paramName:"offset",desc:"(WebGL 2 only) A GLintptr byte offset into the WebGLBuffer's data store. Used to upload data to the currently bound WebGLTexture from the WebGLBuffer bound to the PIXEL_UNPACK_BUFFER target."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D"},{name:"texParameter",desc:"The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",syntax:"void gl.texParameterf(GLenum target, GLenum pname, GLfloat param);\nvoid gl.texParameteri(GLenum target, GLenum pname, GLint param);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP: A cube-mapped texture. When using a WebGL 2 context, the following values are available additionally: gl.TEXTURE_3D: A three-dimensional texture. gl.TEXTURE_2D_ARRAY: A two-dimensional array texture. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter"},{name:"texParameter",desc:"The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",syntax:"void gl.texParameterf(GLenum target, GLenum pname, GLfloat param);\nvoid gl.texParameteri(GLenum target, GLenum pname, GLint param);\n",params:[{paramName:"target",desc:"A GLenum specifying the binding point (target). Possible values: gl.TEXTURE_2D: A two-dimensional texture. gl.TEXTURE_CUBE_MAP: A cube-mapped texture. When using a WebGL 2 context, the following values are available additionally: gl.TEXTURE_3D: A three-dimensional texture. gl.TEXTURE_2D_ARRAY: A two-dimensional array texture. "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter"},{name:"attachShader",desc:"The WebGLRenderingContext.attachShader() method of the WebGL API attaches either a fragment or vertex WebGLShader to a WebGLProgram.",syntax:"void gl.attachShader(program, shader);\n",params:[{paramName:"program",desc:"A WebGLProgram."},{paramName:"shader",desc:"A fragment or vertexÂ WebGLShader."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/attachShader"},{name:"bindAttribLocation",desc:"The WebGLRenderingContext.bindAttribLocation() method of the WebGL API binds a generic vertex index to an attribute variable.",syntax:"void gl.bindAttribLocation(program, index, name);\n",params:[{paramName:"program",desc:"A WebGLProgram object to bind."},{paramName:"index",desc:"A GLuint specifying the index of the generic vertex to bind."},{paramName:"name",desc:'A DOMString specifying the name of the variable to bind to the generic vertex index. This name cannot start with "webgl_" or "_webgl_", as these are reserved for use by WebGL.'}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindAttribLocation"},{name:"compileShader",desc:"The WebGLRenderingContext.compileShader() method of the WebGL API compiles a GLSL shader into binary data so that it can be used by a WebGLProgram.",syntax:"void gl.compileShader(shader);\n",params:[{paramName:"shader",desc:"A fragment or vertexÂ WebGLShader."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compileShader"},{name:"createProgram",desc:"The WebGLRenderingContext.createProgram() method of the WebGL API creates and initializes a WebGLProgram object.",syntax:"WebGLProgram gl.createProgram();\n",params:[],returnVal:"A WebGLProgram object that is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). These are then linked into a usable program..",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createProgram"},{name:"createShader",desc:"The WebGLRenderingContext.createShader() method of the WebGL API creates a WebGLShader that can then be configured further using WebGLRenderingContext.shaderSource() and WebGLRenderingContext.compileShader().",syntax:"WebGLShader gl.createShader(type);\n",params:[{paramName:"type",desc:"Either gl.VERTEX_SHADER or gl.FRAGMENT_SHADER"}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createShader"},{name:"deleteProgram",desc:"The WebGLRenderingContext.deleteProgram() method of the WebGL API deletes a given WebGLProgram object. This method has no effect if the program has already been deleted.",syntax:"void gl.deleteProgram(program);\n",params:[{paramName:"program",desc:"A WebGLProgram object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteProgram"},{name:"deleteShader",desc:"The WebGLRenderingContext.deleteShader() method of the WebGL API marks a given WebGLShader object for deletion. It will then be deleted whenever the shader is no longer in use. This method has no effect if the shader has already been deleted, and theÂ WebGLShader is automatically marked for deletion when it is destroyed by the garbage collector.",syntax:"void gl.deleteShader(shader);\n",params:[{paramName:"shader",desc:"A WebGLShader object to delete."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteShader"},{name:"detachShader",desc:"The WebGLRenderingContext.detachShader() method of the WebGL API detaches a previously attachedÂ WebGLShader from a WebGLProgram.",syntax:"void gl.detachShader(program, shader);\n",params:[{paramName:"program",desc:"A WebGLProgram."},{paramName:"shader",desc:"A fragment or vertexÂ WebGLShader."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/detachShader"},{name:"getAttachedShaders",desc:"The WebGLRenderingContext.getAttachedShaders() method of the WebGL API returns a list of WebGLShader objects attached to a WebGLProgram.",syntax:"sequence<WebGLShader> gl.getAttachedShaders(program);\n",params:[{paramName:"program",desc:"A WebGLProgram object to get attached shaders for."}],returnVal:"An Array of WebGLShader objects that are attached to the given WebGLProgram.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttachedShaders"},{name:"getProgramParameter",desc:"The WebGLRenderingContext.getProgramParameter() method of the WebGL API returns information about the given program.",syntax:"any gl.getProgramParameter(program, pname);\n",params:[{paramName:"program",desc:"A WebGLProgram to get parameter information from."},{paramName:"pname",desc:"A Glenum specifying the information to query. Possible values: gl.DELETE_STATUS: Returns a GLboolean indicating whether or not the program is flagged for deletion. gl.LINK_STATUS: Returns a GLboolean indicating whether or not the last link operation was successful. gl.VALIDATE_STATUS: Returns a GLboolean indicating whether or not the last validation operation was successful. gl.ATTACHED_SHADERS: Returns a GLint indicating the number of attached shaders to a program. gl.ACTIVE_ATTRIBUTES: Returns a GLint indicating the number of active attribute variables to a program. gl.ACTIVE_UNIFORMS: Returns a GLint indicating the number of active uniform variables to a program. When using a WebGL 2 context, the following values are available additionally: gl.TRANSFORM_FEEDBACK_BUFFER_MODE: Returns a GLenum indicating the buffer mode when transform feedback is active. May be gl.SEPARATE_ATTRIBS or gl.INTERLEAVED_ATTRIBS. gl.TRANSFORM_FEEDBACK_VARYINGS: Returns a GLint indicating the number of varying variables to capture in transform feedback mode. gl.ACTIVE_UNIFORM_BLOCKS: Returns a GLint indicating the number of uniform blocks containing active uniforms. "}],returnVal:"Returns the requested program information (as specified with pname).",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramParameter"},{name:"getProgramInfoLog",desc:"The WebGLRenderingContext.getProgramInfoLog returns the information log for the specified WebGLProgram object. It contains errors that occurred during failed linking or validation of WebGLProgram objects.",syntax:"gl.getProgramInfoLog(program);",params:[{paramName:"program",desc:"A WebGLProgram to query."}],returnVal:"A DOMString that contains diagnostic messages, warning messages, and other information about the last linking or validation operation. When a WebGLProgram object is initially created, its information log will be a string of length 0.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramInfoLog"},{name:"getShaderParameter",desc:"The WebGLRenderingContext.getShaderParameter() method of the WebGL API returns information about the given shader.",syntax:"any gl.getShaderParameter(shader, pname);\n",params:[{paramName:"shader",desc:"A WebGLShader to get parameter information from."},{paramName:"pname",desc:"A Glenum specifying the information to query. Possible values: gl.DELETE_STATUS: Returns a GLboolean indicating whether or not the shader is flagged for deletion. gl.COMPILE_STATUS: Returns a GLboolean indicating whether or not the last shader compilation was successful. gl.SHADER_TYPE: Returns a GLenum indicating whether the shader is a vertex shader (gl.VERTEX_SHADER) or fragment shader (gl.FRAGMENT_SHADER) object. "}],returnVal:"Returns the requested shader information (as specified with pname).",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderParameter"},{name:"getShaderPrecisionFormat",desc:"The WebGLRenderingContext.getShaderPrecisionFormat() method of the WebGL API returns a new WebGLShaderPrecisionFormat object describing the range and precision for the specified shader numeric format.",syntax:"WebGLShaderPrecisionFormat gl.getShaderPrecisionFormat(shaderType, precisionType);\n",params:[{paramName:"shaderType",desc:"Either a gl.FRAGMENT_SHADER or a gl.VERTEX_SHADER."},{paramName:"precisionType",desc:"A precision type value. Either gl.LOW_FLOAT, gl.MEDIUM_FLOAT, gl.HIGH_FLOAT, gl.LOW_INT, gl.MEDIUM_INT, or gl.HIGH_INT."}],returnVal:"A WebGLShaderPrecisionFormat object or null, if an error occurs.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat"},{name:"getShaderInfoLog",desc:"The WebGLRenderingContext.getShaderInfoLog returns the information log for the specified WebGLShader object. It contains warnings, debugging and compile information.",syntax:"gl.getShaderInfoLog(shader);",params:[{paramName:"shader",desc:"A WebGLShader to query."}],returnVal:"A DOMString that contains diagnostic messages, warning messages, and other information about the last compile operation. When a WebGLShader object is initially created, its information log will be a string of length 0.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderInfoLog"},{name:"getShaderSource",desc:"The WebGLRenderingContext.getShaderSource() method of the WebGL API returns the source code of a WebGLShader as a DOMString.",syntax:"DOMString gl.getShaderSource(shader);\n",params:[{paramName:"shader",desc:"A WebGLShader object to get the source code from."}],returnVal:"A DOMString containing the source code of the shader.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderSource"},{name:"isProgram",desc:"The WebGLRenderingContext.isProgram() method of the WebGL API returns true if the passed WebGLProgram is valid, false otherwise.",syntax:"GLboolean gl.isProgram(program);\n",params:[{paramName:"program",desc:"A WebGLProgram to check."}],returnVal:"A GLboolean indicating whether or not the program is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isProgram"},{name:"isShader",desc:"The WebGLRenderingContext.isShader() method of the WebGL API returns true if the passed WebGLShader is valid, false otherwise.",syntax:"GLboolean gl.isShader(shader);\n",params:[{paramName:"shader",desc:"A WebGLShader to check."}],returnVal:"A GLboolean indicating whether or not the shader is valid.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isShader"},{name:"linkProgram",desc:"The WebGLRenderingContext.linkProgram() method of the WebGL API links a given WebGLProgram to the attached vertex and fragment shaders.",syntax:"void gl.linkProgram(program);\n",params:[{paramName:"program",desc:"A WebGLProgram to link."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/linkProgram"},{name:"shaderSource",desc:"The WebGLRenderingContext.shaderSource() method of the WebGL API sets the source code of a WebGLShader.",syntax:"void gl.shaderSource(shader, source);\n",params:[{paramName:"shader",desc:"A WebGLShader object in which to set the source code."},{paramName:"source",desc:"A DOMString containing the GLSL source code to set."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/shaderSource"},{name:"useProgram",desc:"The WebGLRenderingContext.useProgram() method of the WebGL API sets the specified WebGLProgram as part of the current rendering state.",syntax:"void gl.useProgram(program);\n",params:[{paramName:"program",desc:"A WebGLProgram to use."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/useProgram"},{name:"validateProgram",desc:"The WebGLRenderingContext.validateProgram() method of the WebGL API validates a WebGLProgram. It checks if it is successfully linked and if it can be used in the current WebGL state.",syntax:"void gl.validateProgram(program);\n",params:[{paramName:"program",desc:"A WebGLProgram to validate."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/validateProgram"},{name:"disableVertexAttribArray",desc:"The WebGLRenderingContext.disableVertexAttribArray() method of the WebGL API turns the generic vertex attribute array off at a given index position.",syntax:"void gl.disableVertexAttribArray(index);\n",params:[{paramName:"index",desc:"A GLuint specifying the index of the vertex attribute to disable."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray"},{name:"enableVertexAttribArray",desc:"The WebGLRenderingContext method enableVertexAttribArray(), part of the WebGL API, turns on the generic vertex attribute array at the specified index into the list of attribute arrays.",syntax:"void gl.enableVertexAttribArray(index);\n",params:[{paramName:"index",desc:"A GLuint specifying the index number that uniquely identifies the vertex attribute to enable. If you know the name of the attribute but not its index, you can get the index by calling getAttribLocation()."}],returnVal:"undefined.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray"},{name:"getActiveAttrib",desc:"The WebGLRenderingContext.getActiveAttrib() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a vertex attribute.Â It is generally used when querying unknown uniforms either for debugging or generic library creation.",syntax:"WebGLActiveInfo gl.getActiveAttrib(program,index);\n",params:[{paramName:"program",desc:"A WebGLProgram containing the vertex attribute."},{paramName:"index",desc:"A GLuint specifying the index of the vertex attribute to get.Â This value is an index 0 to N - 1 as returned byÂ gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)."}],returnVal:"A WebGLActiveInfo object.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveAttrib"},{name:"getActiveUniform",desc:"The WebGLRenderingContext.getActiveUniform() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a uniform attribute. It is generally used when querying unknown uniforms either for debugging or generic library creation.",syntax:"WebGLActiveInfo WebGLRenderingContext.getActiveUniform(program, index);\n",params:[{paramName:"program",desc:"A WebGLProgram specifying the WebGL shader program from which to obtain the uniform variable's information."},{paramName:"index",desc:"A GLuint specifying the index of the uniform attribute to get. This value is an index 0 to N - 1 as returned byÂ gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)."}],returnVal:"A WebGLActiveInfo object describing the uniform.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveUniform"},{name:"getAttribLocation",desc:"The WebGLRenderingContext.getAttribLocation() method of the WebGL API returns the location of an attribute variable in a given WebGLProgram.",syntax:"GLint gl.getAttribLocation(program, name);\n",params:[{paramName:"program",desc:"A WebGLProgram containing the attribute variable."},{paramName:"name",desc:"A DOMString specifying the name of the attribute variable whose location to get."}],returnVal:"A GLint number indicating the location of the variable name if found. Returns -1 otherwise.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttribLocation"},{name:"getUniform",desc:"The WebGLRenderingContext.getUniform() method of the WebGL API returns the value of a uniform variable at a given location.",syntax:"any gl.getUniform(program, location);\n",params:[{paramName:"program",desc:"A WebGLProgram containing the uniform attribute."},{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to get."}],returnVal:"The returned type depends on the uniform type:",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform"},{name:"getUniformLocation",desc:"Part of the WebGL API, the WebGLRenderingContext method getUniformLocation() returns the location of a specific uniform variable which is part of a given WebGLProgram. The uniform variable is returned as a WebGLUniformLocation object, which is an opaque identifier used to specify where in the GPU's memory that uniform variable is located.",syntax:"WebGLUniformLocation = WebGLRenderingContext.getUniformLocation(program, name);\n",params:[{paramName:"program",desc:"The WebGLProgram in which to locate the specified uniform variable."},{paramName:"name",desc:"A DOMString specifying the name of the uniform variable whose location is to be returned. The name can't have any whitespace in it, and you can't use this function to get the location of any uniforms starting with the reserved string \"gl_\", since those are internal to the WebGL layer. The possible values correspond to the uniform names returned by getActiveUniform; see that function for specifics on how declared uniforms map to uniform location names. Additionally, for uniforms declared as arrays, the following names are also valid: The uniform name without the [0] suffix. E.g. the location returned for arrayUniform is equivalent to the one for arrayUniform[0]. The uniform name indexed with an integer. E.g. the location returned for arrayUniform[2] would point directly to the third entry of the arrayUniform uniform. "}],returnVal:"A WebGLUniformLocation value indicating the location of the named variable, if it exists. If the specified variable doesn't exist, null is returned instead.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation"},{name:"getVertexAttrib",desc:"The WebGLRenderingContext.getVertexAttrib() method of the WebGL API returns information about a vertex attribute at a given position.",syntax:"any gl.getVertexAttrib(index, pname);\n",params:[{paramName:"index",desc:"A GLuint specifying the index of the vertex attribute."},{paramName:"pname",desc:"A GLenum specifying the information to query. Possible values: gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: Returns the currently bound WebGLBuffer. gl.VERTEX_ATTRIB_ARRAY_ENABLED: Returns a GLboolean that is true if the vertex attribute is enabled at this index. Otherwise false. gl.VERTEX_ATTRIB_ARRAY_SIZE:Â Returns a GLint indicating the size of an element of the vertex array. gl.VERTEX_ATTRIB_ARRAY_STRIDE:Â Returns a GLint indicating the number of bytes between successive elements in the array. 0 means that the elements are sequential. gl.VERTEX_ATTRIB_ARRAY_TYPE:Â Returns a GLenum representing the array type. One of gl.BYTE, gl.UNSIGNED_BYTE, gl.SHORT, gl.UNSIGNED_SHORT, gl.FLOAT. gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:Â Returns a GLboolean that is true if fixed-point data types are normalized for the vertex attribute array at the given index. gl.CURRENT_VERTEX_ATTRIB:Â Returns a Float32Array (with 4 elements) representing the current value of the vertex attribute at the given index. When using a WebGL 2 context, the following values are available additionally: gl.VERTEX_ATTRIB_ARRAY_INTEGER: Returns a GLboolean indicating whether or not an integer data type is in the vertex attribute array at the given index. gl.VERTEX_ATTRIB_ARRAY_DIVISOR: Returns a GLint describing the frequency divisor used for instanced rendering. When using the ANGLE_instanced_arrays extension: ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: Returns a GLint describing the frequency divisor used for instanced rendering. "}],returnVal:"Returns the requested vertex attribute information (as specified with pname).",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttrib"},{name:"getVertexAttribOffset",desc:"The WebGLRenderingContext.getVertexAttribOffset() method of the WebGL API returns the address of a specified vertex attribute.",syntax:"GLintptr gl.getVertexAttribOffset(index, pname);\n",params:[{paramName:"index",desc:"A GLuint specifying the index of the vertex attribute."},{paramName:"pname",desc:"A GLenum which must be gl.VERTEX_ATTRIB_ARRAY_POINTER."}],returnVal:"A GLintptr indicating the address of the vertex attribute.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset"},{name:"uniform1f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform4f",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform4i",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"v0",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v1",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v2",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '},{paramName:"v3",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform4iv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform1fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform2fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform3fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniform4fv",syntax:"void gl.uniform1f(location, v0);\nvoid gl.uniform1fv(location, value);\nvoid gl.uniform1i(location, v0);\nvoid gl.uniform1iv(location, value);\n\nvoid gl.uniform2f(location, v0, v1);\nvoid gl.uniform2fv(location, value);\nvoid gl.uniform2i(location, v0, v1);\nvoid gl.uniform2iv(location, value);\n\nvoid gl.uniform3f(location, v0, v1, v2);\nvoid gl.uniform3fv(location, value);\nvoid gl.uniform3i(location, v0, v1, v2);\nvoid gl.uniform3iv(location, value);\n\nvoid gl.uniform4f(location, v0, v1, v2, v3);\nvoid gl.uniform4fv(location, value);\nvoid gl.uniform4i(location, v0, v1, v2, v3);\nvoid gl.uniform4iv(location, value);\n",desc:"The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify."},{paramName:"value",desc:'A new value to be used for the uniform variable. Possible types: A floating point Number for floating point values (methods with "f"). A sequence of floating point numbers (for example a Float32Array or an Array of numbers) for floating point vector methods (methods with "fv"). An integer Number for integer values (methods with "i"). An Int32Array for integer vector methods (methods with "iv"). '}],returnVal:"None."},{name:"uniformMatrix1fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix1fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix2fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix1fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix2fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix3fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix1fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix2fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix3fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"uniformMatrix4fv",syntax:"WebGLRenderingContext.uniformMatrix2fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix3fv(location, transpose, value);\nWebGLRenderingContext.uniformMatrix4fv(location, transpose, value); \n",desc:"The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",params:[{paramName:"location",desc:"A WebGLUniformLocation object containing the location of the uniform attribute to modify. The location is obtained using getUniformLocation()."},{paramName:"transpose",desc:"A GLboolean specifying whether to transpose the matrix. Must be false."},{paramName:"value",desc:" A Float32Array or sequence of GLfloat values. "}],returnVal:"undefined"},{name:"vertexAttrib1f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib3f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."},{paramName:"v3",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."},{paramName:"v3",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib3f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."},{paramName:"v3",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib4f",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"v0",desc:"A floating point Number for the vertex attribute value."},{paramName:"v1",desc:"A floating point Number for the vertex attribute value."},{paramName:"v2",desc:"A floating point Number for the vertex attribute value."},{paramName:"v3",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib3fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib1fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib2fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib3fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttrib4fv",syntax:"void gl.vertexAttrib1f(index, v0);\nvoid gl.vertexAttrib2f(index, v0, v1);\nvoid gl.vertexAttrib3f(index, v0, v1, v2);\nvoid gl.vertexAttrib4f(index, v0, v1, v2, v3);\n\nvoid gl.vertexAttrib1fv(index, value);\nvoid gl.vertexAttrib2fv(index, value);\nvoid gl.vertexAttrib3fv(index, value);\nvoid gl.vertexAttrib4fv(index, value);\n",desc:"The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",params:[{paramName:"index",desc:"A GLuint specifying the position of the vertex attribute to be modified."},{paramName:"value",desc:"A floating point Number for the vertex attribute value."}],returnVal:"None."},{name:"vertexAttribPointer",desc:"The WebGLRenderingContext.vertexAttribPointer() method of the WebGL API binds the buffer currently bound to gl.ARRAY_BUFFER to a generic vertex attribute of the current vertex buffer object and specifies its layout.",syntax:"void gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n",params:[{paramName:"index",desc:"A GLuint specifying the index of the vertex attribute that is to be modified."},{paramName:"size",desc:"A GLint specifying the number of components per vertex attribute. Must be 1, 2, 3, or 4."},{paramName:"type",desc:"A GLenum specifying the data type of each component in the array. Possible values: gl.BYTE: signed 8-bit integer, with values in [-128, 127] gl.SHORT: signed 16-bit integer, with values in [-32768, 32767] gl.UNSIGNED_BYTE: unsigned 8-bit integer, with values in [0, 255] gl.UNSIGNED_SHORT: unsigned 16-bit integer, with values in [0, 65535] gl.FLOAT: 32-bit IEEE floating point number When using a WebGL 2 context, the following values are available additionally: gl.HALF_FLOAT: 16-bit IEEE floating point number "},{paramName:"normalized",desc:"A GLboolean specifying whether integer data values should be normalized into a certain range when being casted to a float. For types gl.BYTE and gl.SHORT, normalizes the values to [-1, 1] if true. For types gl.UNSIGNED_BYTE and gl.UNSIGNED_SHORT, normalizes the values to [0, 1] if true. For types gl.FLOAT and gl.HALF_FLOAT, this parameter has no effect. "},{paramName:"stride",desc:"A GLsizei specifying the offset in bytes between the beginning of consecutive vertex attributes. Cannot be larger than 255. If stride is 0, the attribute is assumed to be tightly packed, that is, the attributes are not interleaved but each attribute is in a separate block, and the next vertex' attribute follows immediately after the current vertex."},{paramName:"offset",desc:"A GLintptr specifying an offset in bytes of the first component in the vertex attribute array. Must be a multiple of the byte length ofÂ type."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer"},{name:"clear",desc:"The WebGLRenderingContext.clear() method of the WebGL API clears buffers to preset values.",syntax:"void gl.clear(mask);\n",params:[{paramName:"mask",desc:"A GLbitfield bitwise OR mask that indicates the buffers to be cleared. Possible values are: gl.COLOR_BUFFER_BIT gl.DEPTH_BUFFER_BIT gl.STENCIL_BUFFER_BIT "}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear"},{name:"drawArrays",desc:"The WebGLRenderingContext.drawArrays() method of the WebGL API renders primitives from array data.",syntax:"void gl.drawArrays(mode, first, count);\n",params:[{paramName:"mode",desc:"A GLenum specifying the type primitive to render. Possible values are: gl.POINTS: Draws a single dot. gl.LINE_STRIP: Draws a straight line to the next vertex. gl.LINE_LOOP: Draws a straight line to the next vertex, and connects the last vertex back to the first. gl.LINES: Draws a line between a pair of vertices. gl.TRIANGLE_STRIP gl.TRIANGLE_FAN gl.TRIANGLES: Draws a triangle for a group of three vertices. "},{paramName:"first",desc:"A GLint specifying the starting index in the array of vector points."},{paramName:"count",desc:"A GLsizei specifying the number of indices to be rendered."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawArrays"},{name:"drawElements",desc:"The WebGLRenderingContext.drawElements() method of the WebGL API renders primitives from array data.",syntax:"void gl.drawElements(mode, count, type, offset);\n",params:[{paramName:"mode",desc:"A GLenum specifying the type primitive to render. Possible values are: gl.POINTS: Draws a single dot. gl.LINE_STRIP: Draws a straight line to the next vertex. gl.LINE_LOOP: Draws a straight line to the next vertex, and connects the last vertex back to the first. gl.LINES: Draws a line between a pair of vertices. gl.TRIANGLE_STRIP gl.TRIANGLE_FAN gl.TRIANGLES: Draws a triangle for a group of three vertices. "},{paramName:"count",desc:"A GLsizei specifying the number of elements to be rendered."},{paramName:"type",desc:"A GLenum specifying the type of the values in the element array buffer. Possible values are: gl.UNSIGNED_BYTE gl.UNSIGNED_SHORT When using the OES_element_index_uint extension: gl.UNSIGNED_INT "},{paramName:"offset",desc:"A GLintptr specifying aÂ byteÂ offset in the element array buffer. Must be a valid multiple of the size of the given type."}],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements"},{name:"finish",desc:"The WebGLRenderingContext.finish() method of the WebGL API blocks execution until all previously called commands are finished.",syntax:"void gl.finish();\n",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/finish"},{name:"flush",desc:"The WebGLRenderingContext.flush() method of the WebGL API empties different buffer commands, causing all commands to be executed as quickly as possible.",syntax:"void gl.flush();\n",params:[],returnVal:"None.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/flush"},{name:"getSupportedExtensions",desc:"The WebGLRenderingContext.getSupportedExtensions() method returns a list of all the supported WebGL extensions.",syntax:"gl.getSupportedExtensions();",params:[],returnVal:"An Array of strings with all the supported WebGL extensions.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getSupportedExtensions"},{name:"getExtension",desc:"The WebGLRenderingContext.getExtension() method enables a WebGL extension.",syntax:"gl.getExtension(name);",params:[{paramName:"name",desc:"A String for the name of the WebGL extension to enable."}],returnVal:"A WebGL extension object, or null if name does not match (case-insensitive) to one of the strings in WebGLRenderingContext.getSupportedExtensions.",type:"function",url:"developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getExtension"}]},function(e){e.exports=[{name:"DEPTH_BUFFER_BIT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x00000100",desc:"Passed to clear to clear the current depth buffer.",type:"constant"},{name:"STENCIL_BUFFER_BIT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x00000400",desc:"Passed to clear to clear the current stencil buffer.",type:"constant"},{name:"COLOR_BUFFER_BIT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x00004000",desc:"Passed to clear to clear the current color buffer.",type:"constant"},{name:"POINTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0000",desc:"Passed to drawElements or drawArrays to draw single points.",type:"constant"},{name:"LINES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0001",desc:"Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it.",type:"constant"},{name:"LINE_LOOP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0002",desc:"Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment.",type:"constant"},{name:"LINE_STRIP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0003",desc:"Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last.",type:"constant"},{name:"TRIANGLES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0004",desc:"Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle.",type:"constant"},{name:"TRIANGLE_STRIP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0005",desc:"Passed to drawElements or drawArrays to draw a connected group of triangles.",type:"constant"},{name:"TRIANGLE_FAN",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0006",desc:"Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan.",type:"constant"},{name:"ZERO",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0",desc:"Passed to blendFunc or blendFuncSeparate to turn off a component.",type:"constant"},{name:"ONE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"1",desc:"Passed to blendFunc or blendFuncSeparate to turn on a component.",type:"constant"},{name:"SRC_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0300",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color.",type:"constant"},{name:"ONE_MINUS_SRC_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0301",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color.",type:"constant"},{name:"SRC_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0302",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha.",type:"constant"},{name:"ONE_MINUS_SRC_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0303",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha.",type:"constant"},{name:"DST_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0304",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha.",type:"constant"},{name:"ONE_MINUS_DST_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0305",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha.",type:"constant"},{name:"DST_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0306",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color.",type:"constant"},{name:"ONE_MINUS_DST_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0307",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color.",type:"constant"},{name:"SRC_ALPHA_SATURATE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0308",desc:"Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha.",type:"constant"},{name:"CONSTANT_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8001",desc:"Passed to blendFunc or blendFuncSeparate to specify a constant color blend function.",type:"constant"},{name:"ONE_MINUS_CONSTANT_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8002",desc:"Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function.",type:"constant"},{name:"CONSTANT_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8003",desc:"Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function.",type:"constant"},{name:"ONE_MINUS_CONSTANT_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8004",desc:"Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function.",type:"constant"},{name:"FUNC_ADD",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8006",desc:"Passed to blendEquation or blendEquationSeparate to set an addition blend function.",type:"constant"},{name:"FUNC_SUBTRACT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x800A",desc:"Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination).",type:"constant"},{name:"FUNC_REVERSE_SUBTRACT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x800B",desc:"Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source).",type:"constant"},{name:"BLEND_EQUATION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8009",desc:"Passed to getParameter to get the current RGB blend function.",type:"constant"},{name:"BLEND_EQUATION_RGB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8009",desc:"Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION",type:"constant"},{name:"BLEND_EQUATION_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x883D",desc:"Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION",type:"constant"},{name:"BLEND_DST_RGB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80C8",desc:"Passed to getParameter to get the current destination RGB blend function.",type:"constant"},{name:"BLEND_SRC_RGB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80C9",desc:"Passed to getParameter to get the current destination RGB blend function.",type:"constant"},{name:"BLEND_DST_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80CA",desc:"Passed to getParameter to get the current destination alpha blend function.",type:"constant"},{name:"BLEND_SRC_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80CB",desc:"Passed to getParameter to get the current source alpha blend function.",type:"constant"},{name:"BLEND_COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8005",desc:"Passed to getParameter to return a the current blend color.",type:"constant"},{name:"ARRAY_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8894",desc:"Passed to getParameter to get the array buffer binding.",type:"constant"},{name:"ELEMENT_ARRAY_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8895",desc:"Passed to getParameter to get the current element array buffer.",type:"constant"},{name:"LINE_WIDTH",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B21",desc:"Passed to getParameter to get the current lineWidth (set by the lineWidth method).",type:"constant"},{name:"ALIASED_POINT_SIZE_RANGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x846D",desc:"Passed to getParameter to get the current size of a point drawn with gl.POINTS",type:"constant"},{name:"ALIASED_LINE_WIDTH_RANGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x846E",desc:"Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1.",type:"constant"},{name:"CULL_FACE_MODE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B45",desc:"Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK",type:"constant"},{name:"FRONT_FACE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B46",desc:"Passed to getParameter to determine the current value of frontFace. Should return CW or CCW.",type:"constant"},{name:"DEPTH_RANGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B70",desc:"Passed to getParameter to return a length-2 array of floats giving the current depth range.",type:"constant"},{name:"DEPTH_WRITEMASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B72",desc:"Passed to getParameter to determine if the depth write mask is enabled.",type:"constant"},{name:"DEPTH_CLEAR_VALUE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B73",desc:"Passed to getParameter to determine the current depth clear value.",type:"constant"},{name:"DEPTH_FUNC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B74",desc:"Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL.",type:"constant"},{name:"STENCIL_CLEAR_VALUE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B91",desc:"Passed to getParameter to get the value the stencil will be cleared to.",type:"constant"},{name:"STENCIL_FUNC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B92",desc:"Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL.",type:"constant"},{name:"STENCIL_FAIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B94",desc:"Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",type:"constant"},{name:"STENCIL_PASS_DEPTH_FAIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B95",desc:"Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",type:"constant"},{name:"STENCIL_PASS_DEPTH_PASS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B96",desc:"Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",type:"constant"},{name:"STENCIL_REF",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B97",desc:"Passed to getParameter to get the reference value used for stencil tests.",type:"constant"},{name:"STENCIL_VALUE_MASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B93",desc:"Â ",type:"constant"},{name:"STENCIL_WRITEMASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B98",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_FUNC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8800",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_FAIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8801",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_PASS_DEPTH_FAIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8802",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_PASS_DEPTH_PASS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8803",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_REF",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA3",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_VALUE_MASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA4",desc:"Â ",type:"constant"},{name:"STENCIL_BACK_WRITEMASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA5",desc:"Â ",type:"constant"},{name:"VIEWPORT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0BA2",desc:"Returns an Int32Array with four elements for the current viewport dimensions.",type:"constant"},{name:"SCISSOR_BOX",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0C10",desc:"Returns an Int32Array with four elements for the current scissor box dimensions.",type:"constant"},{name:"COLOR_CLEAR_VALUE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0C22",desc:"Â ",type:"constant"},{name:"COLOR_WRITEMASK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0C23",desc:"Â ",type:"constant"},{name:"UNPACK_ALIGNMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0CF5",desc:"Â ",type:"constant"},{name:"PACK_ALIGNMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D05",desc:"Â ",type:"constant"},{name:"MAX_TEXTURE_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D33",desc:"Â ",type:"constant"},{name:"MAX_VIEWPORT_DIMS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D3A",desc:"Â ",type:"constant"},{name:"SUBPIXEL_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D50",desc:"Â ",type:"constant"},{name:"RED_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D52",desc:"Â ",type:"constant"},{name:"GREEN_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D53",desc:"Â ",type:"constant"},{name:"BLUE_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D54",desc:"Â ",type:"constant"},{name:"ALPHA_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D55",desc:"Â ",type:"constant"},{name:"DEPTH_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D56",desc:"Â ",type:"constant"},{name:"STENCIL_BITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D57",desc:"Â ",type:"constant"},{name:"POLYGON_OFFSET_UNITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2A00",desc:"Â ",type:"constant"},{name:"POLYGON_OFFSET_FACTOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8038",desc:"Â ",type:"constant"},{name:"TEXTURE_BINDING_2D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8069",desc:"Â ",type:"constant"},{name:"SAMPLE_BUFFERS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80A8",desc:"Â ",type:"constant"},{name:"SAMPLES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80A9",desc:"Â ",type:"constant"},{name:"SAMPLE_COVERAGE_VALUE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80AA",desc:"Â ",type:"constant"},{name:"SAMPLE_COVERAGE_INVERT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80AB",desc:"Â ",type:"constant"},{name:"COMPRESSED_TEXTURE_FORMATS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x86A3",desc:"Â ",type:"constant"},{name:"VENDOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1F00",desc:"Â ",type:"constant"},{name:"RENDERER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1F01",desc:"Â ",type:"constant"},{name:"VERSION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1F02",desc:"Â ",type:"constant"},{name:"IMPLEMENTATION_COLOR_READ_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B9A",desc:"Â ",type:"constant"},{name:"IMPLEMENTATION_COLOR_READ_FORMAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B9B",desc:"Â ",type:"constant"},{name:"BROWSER_DEFAULT_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9244",desc:"Â ",type:"constant"},{name:"STATIC_DRAW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E4",desc:"Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often.",type:"constant"},{name:"STREAM_DRAW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E0",desc:"Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often.",type:"constant"},{name:"DYNAMIC_DRAW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E8",desc:"Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often.",type:"constant"},{name:"ARRAY_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8892",desc:"Passed to bindBuffer or bufferData to specify the type of buffer being used.",type:"constant"},{name:"ELEMENT_ARRAY_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8893",desc:"Passed to bindBuffer or bufferData to specify the type of buffer being used.",type:"constant"},{name:"BUFFER_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8764",desc:"Passed to getBufferParameter to get a buffer's size.",type:"constant"},{name:"BUFFER_USAGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8765",desc:"Passed toÂ getBufferParameter to get the hint for the buffer passed in when it was created.",type:"constant"},{name:"CURRENT_VERTEX_ATTRIB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8626",desc:"Passed to getVertexAttrib to read back the current vertex attribute.",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_ENABLED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8622",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8623",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_STRIDE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8624",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8625",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_NORMALIZED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x886A",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_POINTER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8645",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x889F",desc:"Â ",type:"constant"},{name:"CULL_FACE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B44",desc:"Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method.",type:"constant"},{name:"FRONT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0404",desc:"Passed to cullFace to specify that only front faces should be culled.",type:"constant"},{name:"BACK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0405",desc:"Passed to cullFace to specify that only back faces should be culled.",type:"constant"},{name:"FRONT_AND_BACK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0408",desc:"Passed toÂ cullFace to specify that front and back faces should be culled.",type:"constant"},{name:"BLEND",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0BE2",desc:"Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method.",type:"constant"},{name:"DEPTH_TEST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B71",desc:"Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test.",type:"constant"},{name:"DITHER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0BD0",desc:"Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method.",type:"constant"},{name:"POLYGON_OFFSET_FILL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8037",desc:"Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test.",type:"constant"},{name:"SAMPLE_ALPHA_TO_COVERAGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x809E",desc:"Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels.",type:"constant"},{name:"SAMPLE_COVERAGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80A0",desc:"Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling.",type:"constant"},{name:"SCISSOR_TEST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0C11",desc:"Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test.",type:"constant"},{name:"STENCIL_TEST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0B90",desc:"Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test.",type:"constant"},{name:"NO_ERROR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0",desc:"Returned from getError.",type:"constant"},{name:"INVALID_ENUM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0500",desc:"Returned from getError.",type:"constant"},{name:"INVALID_VALUE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0501",desc:"Returned from getError.",type:"constant"},{name:"INVALID_OPERATION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0502",desc:"Returned from getError.",type:"constant"},{name:"OUT_OF_MEMORY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0505",desc:"Returned from getError.",type:"constant"},{name:"CONTEXT_LOST_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9242",desc:"Returned from getError.",type:"constant"},{name:"CW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0900",desc:"Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction",type:"constant"},{name:"CCW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0901",desc:"Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction",type:"constant"},{name:"DONT_CARE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1100",desc:"There is no preference for this behavior.",type:"constant"},{name:"FASTEST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1101",desc:"The most efficient behavior should be used.",type:"constant"},{name:"NICEST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1102",desc:"The most correct or the highest quality option should be used.",type:"constant"},{name:"GENERATE_MIPMAP_HINT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8192",desc:"Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap().",type:"constant"},{name:"BYTE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1400",desc:"Â ",type:"constant"},{name:"UNSIGNED_BYTE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1401",desc:"Â ",type:"constant"},{name:"SHORT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1402",desc:"Â ",type:"constant"},{name:"UNSIGNED_SHORT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1403",desc:"Â ",type:"constant"},{name:"INT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1404",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1405",desc:"Â ",type:"constant"},{name:"FLOAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1406",desc:"Â ",type:"constant"},{name:"DEPTH_COMPONENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1902",desc:"Â ",type:"constant"},{name:"ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1906",desc:"Â ",type:"constant"},{name:"RGB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1907",desc:"Â ",type:"constant"},{name:"RGBA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1908",desc:"Â ",type:"constant"},{name:"LUMINANCE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1909",desc:"Â ",type:"constant"},{name:"LUMINANCE_ALPHA",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x190A",desc:"Â ",type:"constant"},{name:"UNSIGNED_BYTE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1401",desc:"Â ",type:"constant"},{name:"UNSIGNED_SHORT_4_4_4_4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8033",desc:"Â ",type:"constant"},{name:"UNSIGNED_SHORT_5_5_5_1",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8034",desc:"Â ",type:"constant"},{name:"UNSIGNED_SHORT_5_6_5",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8363",desc:"Â ",type:"constant"},{name:"FRAGMENT_SHADER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B30",desc:"Passed to createShader to define a fragment shader.",type:"constant"},{name:"VERTEX_SHADER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B31",desc:"Passed to createShader to define a vertex shader",type:"constant"},{name:"COMPILE_STATUS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B81",desc:"Passed to getShaderParamter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error",type:"constant"},{name:"DELETE_STATUS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B80",desc:"Passed to getShaderParamter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise.",type:"constant"},{name:"LINK_STATUS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B82",desc:"Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error.",type:"constant"},{name:"VALIDATE_STATUS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B83",desc:"Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found.",type:"constant"},{name:"ATTACHED_SHADERS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B85",desc:"Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred.",type:"constant"},{name:"ACTIVE_ATTRIBUTES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B89",desc:"Passed to getProgramParameter to get the number of attributes active in a program.",type:"constant"},{name:"ACTIVE_UNIFORMS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B86",desc:"Passed to getProgramParamter to get the number of uniforms active in a program.",type:"constant"},{name:"MAX_VERTEX_ATTRIBS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8869",desc:"The maximum number of entries possible in the vertex attribute list.",type:"constant"},{name:"MAX_VERTEX_UNIFORM_VECTORS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DFB",desc:"Â ",type:"constant"},{name:"MAX_VARYING_VECTORS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DFC",desc:"Â ",type:"constant"},{name:"MAX_COMBINED_TEXTURE_IMAGE_UNITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B4D",desc:"Â ",type:"constant"},{name:"MAX_VERTEX_TEXTURE_IMAGE_UNITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B4C",desc:"Â ",type:"constant"},{name:"MAX_TEXTURE_IMAGE_UNITS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8872",desc:"Implementation dependent number of maximum texture units. At least 8.",type:"constant"},{name:"MAX_FRAGMENT_UNIFORM_VECTORS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DFD",desc:"Â ",type:"constant"},{name:"SHADER_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B4F",desc:"Â ",type:"constant"},{name:"SHADING_LANGUAGE_VERSION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B8C",desc:"Â ",type:"constant"},{name:"CURRENT_PROGRAM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B8D",desc:"Â ",type:"constant"},{name:"NEVER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0200",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn.",type:"constant"},{name:"LESS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0201",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value.",type:"constant"},{name:"EQUAL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0202",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value.",type:"constant"},{name:"LEQUAL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0203",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value.",type:"constant"},{name:"GREATER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0204",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value.",type:"constant"},{name:"NOTEQUAL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0205",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value.",type:"constant"},{name:"GEQUAL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0206",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value.",type:"constant"},{name:"ALWAYS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0207",desc:"Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn.",type:"constant"},{name:"KEEP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1E00",desc:"Â ",type:"constant"},{name:"REPLACE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1E01",desc:"Â ",type:"constant"},{name:"INCR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1E02",desc:"Â ",type:"constant"},{name:"DECR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1E03",desc:"Â ",type:"constant"},{name:"INVERT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x150A",desc:"Â ",type:"constant"},{name:"INCR_WRAP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8507",desc:"Â ",type:"constant"},{name:"DECR_WRAP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8508",desc:"Â ",type:"constant"},{name:"NEAREST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2600",desc:"Â ",type:"constant"},{name:"LINEAR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2601",desc:"Â ",type:"constant"},{name:"NEAREST_MIPMAP_NEAREST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2700",desc:"Â ",type:"constant"},{name:"LINEAR_MIPMAP_NEAREST",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2701",desc:"Â ",type:"constant"},{name:"NEAREST_MIPMAP_LINEAR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2702",desc:"Â ",type:"constant"},{name:"LINEAR_MIPMAP_LINEAR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2703",desc:"Â ",type:"constant"},{name:"TEXTURE_MAG_FILTER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2800",desc:"Â ",type:"constant"},{name:"TEXTURE_MIN_FILTER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2801",desc:"Â ",type:"constant"},{name:"TEXTURE_WRAP_S",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2802",desc:"Â ",type:"constant"},{name:"TEXTURE_WRAP_T",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2803",desc:"Â ",type:"constant"},{name:"TEXTURE_2D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0DE1",desc:"Â ",type:"constant"},{name:"TEXTURE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1702",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8513",desc:"Â ",type:"constant"},{name:"TEXTURE_BINDING_CUBE_MAP",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8514",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_POSITIVE_X",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8515",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_NEGATIVE_X",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8516",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_POSITIVE_Y",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8517",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_NEGATIVE_Y",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8518",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_POSITIVE_Z",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8519",desc:"Â ",type:"constant"},{name:"TEXTURE_CUBE_MAP_NEGATIVE_Z",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x851A",desc:"Â ",type:"constant"},{name:"MAX_CUBE_MAP_TEXTURE_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x851C",desc:"Â ",type:"constant"},{name:"TEXTURE0 - 31",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84C0 - 0x84DF",desc:"A texture unit.",type:"constant"},{name:"ACTIVE_TEXTURE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84E0",desc:"The current active texture unit.",type:"constant"},{name:"REPEAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x2901",desc:"Â ",type:"constant"},{name:"CLAMP_TO_EDGE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x812F",desc:"Â ",type:"constant"},{name:"MIRRORED_REPEAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8370",desc:"Â ",type:"constant"},{name:"FLOAT_VEC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B50",desc:"Â ",type:"constant"},{name:"FLOAT_VEC3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B51",desc:"Â ",type:"constant"},{name:"FLOAT_VEC4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B52",desc:"Â ",type:"constant"},{name:"INT_VEC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B53",desc:"Â ",type:"constant"},{name:"INT_VEC3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B54",desc:"Â ",type:"constant"},{name:"INT_VEC4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B55",desc:"Â ",type:"constant"},{name:"BOOL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B56",desc:"Â ",type:"constant"},{name:"BOOL_VEC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B57",desc:"Â ",type:"constant"},{name:"BOOL_VEC3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B58",desc:"Â ",type:"constant"},{name:"BOOL_VEC4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B59",desc:"Â ",type:"constant"},{name:"FLOAT_MAT2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B5A",desc:"Â ",type:"constant"},{name:"FLOAT_MAT3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B5B",desc:"Â ",type:"constant"},{name:"FLOAT_MAT4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B5C",desc:"Â ",type:"constant"},{name:"SAMPLER_2D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B5E",desc:"Â ",type:"constant"},{name:"SAMPLER_CUBE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B60",desc:"Â ",type:"constant"},{name:"LOW_FLOAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF0",desc:"Â ",type:"constant"},{name:"MEDIUM_FLOAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF1",desc:"Â ",type:"constant"},{name:"HIGH_FLOAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF2",desc:"Â ",type:"constant"},{name:"LOW_INT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF3",desc:"Â ",type:"constant"},{name:"MEDIUM_INT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF4",desc:"Â ",type:"constant"},{name:"HIGH_INT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DF5",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D40",desc:"Â ",type:"constant"},{name:"RENDERBUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D41",desc:"Â ",type:"constant"},{name:"RGBA4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8056",desc:"Â ",type:"constant"},{name:"RGB5_A1",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8057",desc:"Â ",type:"constant"},{name:"RGB565",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D62",desc:"Â ",type:"constant"},{name:"DEPTH_COMPONENT16",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x81A5",desc:"Â ",type:"constant"},{name:"STENCIL_INDEX8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D48",desc:"Â ",type:"constant"},{name:"DEPTH_STENCIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84F9",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_WIDTH",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D42",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_HEIGHT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D43",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_INTERNAL_FORMAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D44",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_RED_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D50",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_GREEN_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D51",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_BLUE_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D52",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_ALPHA_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D53",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_DEPTH_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D54",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_STENCIL_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D55",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD0",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD1",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD2",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD3",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT0",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE0",desc:"Â ",type:"constant"},{name:"DEPTH_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D00",desc:"Â ",type:"constant"},{name:"STENCIL_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D20",desc:"Â ",type:"constant"},{name:"DEPTH_STENCIL_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x821A",desc:"Â ",type:"constant"},{name:"NONE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_COMPLETE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD5",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_INCOMPLETE_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD6",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD7",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_INCOMPLETE_DIMENSIONS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD9",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_UNSUPPORTED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CDD",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA6",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA7",desc:"Â ",type:"constant"},{name:"MAX_RENDERBUFFER_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84E8",desc:"Â ",type:"constant"},{name:"INVALID_FRAMEBUFFER_OPERATION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0506",desc:"Â ",type:"constant"},{name:"UNPACK_FLIP_Y_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9240",desc:"Â ",type:"constant"},{name:"UNPACK_PREMULTIPLY_ALPHA_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9241",desc:"Â ",type:"constant"},{name:"UNPACK_COLORSPACE_CONVERSION_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9243",desc:"Â ",type:"constant"},{name:"READ_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0C02",desc:"Â ",type:"constant"},{name:"UNPACK_ROW_LENGTH",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0CF2",desc:"Â ",type:"constant"},{name:"UNPACK_SKIP_ROWS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0CF3",desc:"Â ",type:"constant"},{name:"UNPACK_SKIP_PIXELS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0CF4",desc:"Â ",type:"constant"},{name:"PACK_ROW_LENGTH",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D02",desc:"Â ",type:"constant"},{name:"PACK_SKIP_ROWS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D03",desc:"Â ",type:"constant"},{name:"PACK_SKIP_PIXELS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x0D04",desc:"Â ",type:"constant"},{name:"TEXTURE_BINDING_3D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x806A",desc:"Â ",type:"constant"},{name:"UNPACK_SKIP_IMAGES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x806D",desc:"Â ",type:"constant"},{name:"UNPACK_IMAGE_HEIGHT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x806E",desc:"Â ",type:"constant"},{name:"MAX_3D_TEXTURE_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8073",desc:"Â ",type:"constant"},{name:"MAX_ELEMENTS_VERTICES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80E8",desc:"Â ",type:"constant"},{name:"MAX_ELEMENTS_INDICES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x80E9",desc:"Â ",type:"constant"},{name:"MAX_TEXTURE_LOD_BIAS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84FD",desc:"Â ",type:"constant"},{name:"MAX_FRAGMENT_UNIFORM_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B49",desc:"Â ",type:"constant"},{name:"MAX_VERTEX_UNIFORM_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B4A",desc:"Â ",type:"constant"},{name:"MAX_ARRAY_TEXTURE_LAYERS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88FF",desc:"Â ",type:"constant"},{name:"MIN_PROGRAM_TEXEL_OFFSET",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8904",desc:"Â ",type:"constant"},{name:"MAX_PROGRAM_TEXEL_OFFSET",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8905",desc:"Â ",type:"constant"},{name:"MAX_VARYING_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B4B",desc:"Â ",type:"constant"},{name:"FRAGMENT_SHADER_DERIVATIVE_HINT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B8B",desc:"Â ",type:"constant"},{name:"RASTERIZER_DISCARD",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C89",desc:"Â ",type:"constant"},{name:"VERTEX_ARRAY_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x85B5",desc:"Â ",type:"constant"},{name:"MAX_VERTEX_OUTPUT_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9122",desc:"Â ",type:"constant"},{name:"MAX_FRAGMENT_INPUT_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9125",desc:"Â ",type:"constant"},{name:"MAX_SERVER_WAIT_TIMEOUT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9111",desc:"Â ",type:"constant"},{name:"MAX_ELEMENT_INDEX",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D6B",desc:"Â ",type:"constant"},{name:"RED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1903",desc:"Â ",type:"constant"},{name:"RGB8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8051",desc:"Â ",type:"constant"},{name:"RGBA8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8058",desc:"Â ",type:"constant"},{name:"RGB10_A2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8059",desc:"Â ",type:"constant"},{name:"TEXTURE_3D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x806F",desc:"Â ",type:"constant"},{name:"TEXTURE_WRAP_R",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8072",desc:"Â ",type:"constant"},{name:"TEXTURE_MIN_LOD",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x813A",desc:"Â ",type:"constant"},{name:"TEXTURE_MAX_LOD",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x813B",desc:"Â ",type:"constant"},{name:"TEXTURE_BASE_LEVEL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x813C",desc:"Â ",type:"constant"},{name:"TEXTURE_MAX_LEVEL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x813D",desc:"Â ",type:"constant"},{name:"TEXTURE_COMPARE_MODE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x884C",desc:"Â ",type:"constant"},{name:"TEXTURE_COMPARE_FUNC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x884D",desc:"Â ",type:"constant"},{name:"SRGB",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C40",desc:"Â ",type:"constant"},{name:"SRGB8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C41",desc:"Â ",type:"constant"},{name:"SRGB8_ALPHA8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C43",desc:"Â ",type:"constant"},{name:"COMPARE_REF_TO_TEXTURE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x884E",desc:"Â ",type:"constant"},{name:"RGBA32F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8814",desc:"Â ",type:"constant"},{name:"RGB32F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8815",desc:"Â ",type:"constant"},{name:"RGBA16F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x881A",desc:"Â ",type:"constant"},{name:"RGB16F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x881B",desc:"Â ",type:"constant"},{name:"TEXTURE_2D_ARRAY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C1A",desc:"Â ",type:"constant"},{name:"TEXTURE_BINDING_2D_ARRAY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C1D",desc:"Â ",type:"constant"},{name:"R11F_G11F_B10F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C3A",desc:"Â ",type:"constant"},{name:"RGB9_E5",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C3D",desc:"Â ",type:"constant"},{name:"RGBA32UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D70",desc:"Â ",type:"constant"},{name:"RGB32UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D71",desc:"Â ",type:"constant"},{name:"RGBA16UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D76",desc:"Â ",type:"constant"},{name:"RGB16UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D77",desc:"Â ",type:"constant"},{name:"RGBA8UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D7C",desc:"Â ",type:"constant"},{name:"RGB8UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D7D",desc:"Â ",type:"constant"},{name:"RGBA32I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D82",desc:"Â ",type:"constant"},{name:"RGB32I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D83",desc:"Â ",type:"constant"},{name:"RGBA16I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D88",desc:"Â ",type:"constant"},{name:"RGB16I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D89",desc:"Â ",type:"constant"},{name:"RGBA8I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D8E",desc:"Â ",type:"constant"},{name:"RGB8I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D8F",desc:"Â ",type:"constant"},{name:"RED_INTEGER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D94",desc:"Â ",type:"constant"},{name:"RGB_INTEGER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D98",desc:"Â ",type:"constant"},{name:"RGBA_INTEGER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D99",desc:"Â ",type:"constant"},{name:"R8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8229",desc:"Â ",type:"constant"},{name:"RG8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x822B",desc:"Â ",type:"constant"},{name:"R16F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x822D",desc:"Â ",type:"constant"},{name:"R32F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x822E",desc:"Â ",type:"constant"},{name:"RG16F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x822F",desc:"Â ",type:"constant"},{name:"RG32F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8230",desc:"Â ",type:"constant"},{name:"R8I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8231",desc:"Â ",type:"constant"},{name:"R8UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8232",desc:"Â ",type:"constant"},{name:"R16I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8233",desc:"Â ",type:"constant"},{name:"R16UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8234",desc:"Â ",type:"constant"},{name:"R32I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8235",desc:"Â ",type:"constant"},{name:"R32UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8236",desc:"Â ",type:"constant"},{name:"RG8I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8237",desc:"Â ",type:"constant"},{name:"RG8UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8238",desc:"Â ",type:"constant"},{name:"RG16I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8239",desc:"Â ",type:"constant"},{name:"RG16UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x823A",desc:"Â ",type:"constant"},{name:"RG32I",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x823B",desc:"Â ",type:"constant"},{name:"RG32UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x823C",desc:"Â ",type:"constant"},{name:"R8_SNORM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F94",desc:"Â ",type:"constant"},{name:"RG8_SNORM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F95",desc:"Â ",type:"constant"},{name:"RGB8_SNORM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F96",desc:"Â ",type:"constant"},{name:"RGBA8_SNORM",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F97",desc:"Â ",type:"constant"},{name:"RGB10_A2UI",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x906F",desc:"Â ",type:"constant"},{name:"TEXTURE_IMMUTABLE_FORMAT ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x912F",desc:"Â ",type:"constant"},{name:"TEXTURE_IMMUTABLE_LEVELS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x82DF",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_2_10_10_10_REV",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8368",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_10F_11F_11F_REV",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C3B",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_5_9_9_9_REV",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C3E",desc:"Â ",type:"constant"},{name:"FLOAT_32_UNSIGNED_INT_24_8_REV",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DAD",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_24_8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84FA",desc:"Â ",type:"constant"},{name:"HALF_FLOAT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x140B",desc:"Â ",type:"constant"},{name:"RG",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8227",desc:"Â ",type:"constant"},{name:"RG_INTEGER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8228",desc:"Â ",type:"constant"},{name:"INT_2_10_10_10_REV",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D9F",desc:"Â ",type:"constant"},{name:"CURRENT_QUERY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8865",desc:"Â ",type:"constant"},{name:"QUERY_RESULT ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8866",desc:"Â ",type:"constant"},{name:"QUERY_RESULT_AVAILABLE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8867",desc:"Â ",type:"constant"},{name:"ANY_SAMPLES_PASSED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C2F",desc:"Â ",type:"constant"},{name:"ANY_SAMPLES_PASSED_CONSERVATIVE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D6A",desc:"Â ",type:"constant"},{name:"MAX_DRAW_BUFFERS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8824",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER0",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8825",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER1",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8826",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8827",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8828",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8829",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER5",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882A",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER6",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882B",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER7",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882C",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882D",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER9",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882E",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER10",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882F",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER11",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8830",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER12",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8831",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER13",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8832",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER14",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8833",desc:"Â ",type:"constant"},{name:"DRAW_BUFFER15",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8834",desc:"Â ",type:"constant"},{name:"MAX_COLOR_ATTACHMENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CDF",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT1",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE1",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE2",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE3",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE4",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT5",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE5",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT6",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE6",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT7",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE7",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE8",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT9",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE9",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT10",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEA",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT11",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEB",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT12",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEC",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT13",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CED",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT14",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEE",desc:"Â ",type:"constant"},{name:"COLOR_ATTACHMENT15",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEF",desc:"Â ",type:"constant"},{name:"SAMPLER_3D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B5F",desc:"Â ",type:"constant"},{name:"SAMPLER_2D_SHADOW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B62",desc:"Â ",type:"constant"},{name:"SAMPLER_2D_ARRAY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC1",desc:"Â ",type:"constant"},{name:"SAMPLER_2D_ARRAY_SHADOW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC4",desc:"Â ",type:"constant"},{name:"SAMPLER_CUBE_SHADOW",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC5",desc:"Â ",type:"constant"},{name:"INT_SAMPLER_2D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DCA",desc:"Â ",type:"constant"},{name:"INT_SAMPLER_3D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DCB",desc:"Â ",type:"constant"},{name:"INT_SAMPLER_CUBE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DCC",desc:"Â ",type:"constant"},{name:"INT_SAMPLER_2D_ARRAY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DCF",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_SAMPLER_2D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DD2",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_SAMPLER_3D",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DD3",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_SAMPLER_CUBE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DD4",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_SAMPLER_2D_ARRAY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DD7",desc:"Â ",type:"constant"},{name:"MAX_SAMPLES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D57",desc:"Â ",type:"constant"},{name:"SAMPLER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8919",desc:"Â ",type:"constant"},{name:"PIXEL_PACK_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88EB",desc:"Â ",type:"constant"},{name:"PIXEL_UNPACK_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88EC",desc:"Â ",type:"constant"},{name:"PIXEL_PACK_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88ED",desc:"Â ",type:"constant"},{name:"PIXEL_UNPACK_BUFFER_BINDING ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88EF",desc:"Â ",type:"constant"},{name:"COPY_READ_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F36",desc:"Â ",type:"constant"},{name:"COPY_WRITE_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F37",desc:"Â ",type:"constant"},{name:"COPY_READ_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F36",desc:"Â ",type:"constant"},{name:"COPY_WRITE_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F37",desc:"Â ",type:"constant"},{name:"FLOAT_MAT2x3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B65",desc:"Â ",type:"constant"},{name:"FLOAT_MAT2x4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B66",desc:"Â ",type:"constant"},{name:"FLOAT_MAT3x2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B67",desc:"Â ",type:"constant"},{name:"FLOAT_MAT3x4 ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B68",desc:"Â ",type:"constant"},{name:"FLOAT_MAT4x2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B69",desc:"Â ",type:"constant"},{name:"FLOAT_MAT4x3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B6A",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_VEC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC6",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_VEC3",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC7",desc:"Â ",type:"constant"},{name:"UNSIGNED_INT_VEC4",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8DC8",desc:"Â ",type:"constant"},{name:"UNSIGNED_NORMALIZED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C17",desc:"Â ",type:"constant"},{name:"SIGNED_NORMALIZED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8F9C",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_INTEGER ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88FD",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_DIVISOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88FE",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BUFFER_MODE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C7F",desc:"Â ",type:"constant"},{name:"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C80",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_VARYINGS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C83",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BUFFER_START",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C84",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BUFFER_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C85",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C88",desc:"Â ",type:"constant"},{name:"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8A",desc:"Â ",type:"constant"},{name:"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8B",desc:"Â ",type:"constant"},{name:"INTERLEAVED_ATTRIBS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8C",desc:"Â ",type:"constant"},{name:"SEPARATE_ATTRIBS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8D",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8E",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C8F",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8E22",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_PAUSED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8E23",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_ACTIVE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8E24",desc:"Â ",type:"constant"},{name:"TRANSFORM_FEEDBACK_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8E25",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8210",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8211",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_RED_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8212",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8213",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8214",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8215",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8216",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8217",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_DEFAULT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8218",desc:"Â ",type:"constant"},{name:"DEPTH_STENCIL_ATTACHMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x821A",desc:"Â ",type:"constant"},{name:"DEPTH_STENCIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84F9",desc:"Â ",type:"constant"},{name:"DEPTH24_STENCIL8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88F0",desc:"Â ",type:"constant"},{name:"DRAW_FRAMEBUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA6",desc:"Â ",type:"constant"},{name:"READ_FRAMEBUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA8",desc:"Â ",type:"constant"},{name:"DRAW_FRAMEBUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CA9",desc:"Â ",type:"constant"},{name:"READ_FRAMEBUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CAA",desc:"Â ",type:"constant"},{name:"RENDERBUFFER_SAMPLES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CAB",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CD4",desc:"Â ",type:"constant"},{name:"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D56",desc:"Â ",type:"constant"},{name:"UNIFORM_BUFFER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A11",desc:"Â ",type:"constant"},{name:"UNIFORM_BUFFER_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A28",desc:"Â ",type:"constant"},{name:"UNIFORM_BUFFER_START",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A29",desc:"Â ",type:"constant"},{name:"UNIFORM_BUFFER_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A2A",desc:"Â ",type:"constant"},{name:"MAX_VERTEX_UNIFORM_BLOCKS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A2B",desc:"Â ",type:"constant"},{name:"MAX_FRAGMENT_UNIFORM_BLOCKS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A2D",desc:"Â ",type:"constant"},{name:"MAX_COMBINED_UNIFORM_BLOCKS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A2E",desc:"Â ",type:"constant"},{name:"MAX_UNIFORM_BUFFER_BINDINGS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A2F",desc:"Â ",type:"constant"},{name:"MAX_UNIFORM_BLOCK_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A30",desc:"Â ",type:"constant"},{name:"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A31",desc:"Â ",type:"constant"},{name:"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A33",desc:"Â ",type:"constant"},{name:"UNIFORM_BUFFER_OFFSET_ALIGNMENT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A34",desc:"Â ",type:"constant"},{name:"ACTIVE_UNIFORM_BLOCKS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A36",desc:"Â ",type:"constant"},{name:"UNIFORM_TYPE ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A37",desc:"Â ",type:"constant"},{name:"UNIFORM_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A38",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_INDEX",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3A",desc:"Â ",type:"constant"},{name:"UNIFORM_OFFSET",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3B",desc:"Â ",type:"constant"},{name:"UNIFORM_ARRAY_STRIDE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3C",desc:"Â ",type:"constant"},{name:"UNIFORM_MATRIX_STRIDE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3D",desc:"Â ",type:"constant"},{name:"UNIFORM_IS_ROW_MAJOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3E",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_BINDING",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A3F",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_DATA_SIZE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A40",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_ACTIVE_UNIFORMS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A42",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A43",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A44",desc:"Â ",type:"constant"},{name:"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8A46",desc:"Â ",type:"constant"},{name:"OBJECT_TYPE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9112",desc:"Â ",type:"constant"},{name:"SYNC_CONDITION",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9113",desc:"Â ",type:"constant"},{name:"SYNC_STATUS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9114",desc:"Â ",type:"constant"},{name:"SYNC_FLAGS",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9115",desc:"Â ",type:"constant"},{name:"SYNC_FENCE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9116",desc:"Â ",type:"constant"},{name:"SYNC_GPU_COMMANDS_COMPLETE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9117",desc:"Â ",type:"constant"},{name:"UNSIGNALED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9118",desc:"Â ",type:"constant"},{name:"SIGNALED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9119",desc:"Â ",type:"constant"},{name:"ALREADY_SIGNALED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x911A",desc:"Â ",type:"constant"},{name:"TIMEOUT_EXPIRED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x911B",desc:"Â ",type:"constant"},{name:"CONDITION_SATISFIED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x911C",desc:"Â ",type:"constant"},{name:"WAIT_FAILED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x911D",desc:"Â ",type:"constant"},{name:"SYNC_FLUSH_COMMANDS_BIT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x00000001",desc:"Â ",type:"constant"},{name:"COLOR",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1800",desc:"Â ",type:"constant"},{name:"DEPTH",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1801",desc:"Â ",type:"constant"},{name:"STENCIL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x1802",desc:"Â ",type:"constant"},{name:"MIN",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8007",desc:"Â ",type:"constant"},{name:"MAX",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8008",desc:"Â ",type:"constant"},{name:"DEPTH_COMPONENT24",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x81A6",desc:"Â ",type:"constant"},{name:"STREAM_READ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E1",desc:"Â ",type:"constant"},{name:"STREAM_COPY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E2",desc:"Â ",type:"constant"},{name:"STATIC_READ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E5",desc:"Â ",type:"constant"},{name:"STATIC_COPY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E6",desc:"Â ",type:"constant"},{name:"DYNAMIC_READ",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88E9",desc:"Â ",type:"constant"},{name:"DYNAMIC_COPY",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88EA",desc:"Â ",type:"constant"},{name:"DEPTH_COMPONENT32F",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CAC",desc:"Â ",type:"constant"},{name:"DEPTH32F_STENCIL8",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CAD",desc:"Â ",type:"constant"},{name:"INVALID_INDEX",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0xFFFFFFFF",desc:"Â ",type:"constant"},{name:"TIMEOUT_IGNORED",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"-1",desc:"Â ",type:"constant"},{name:"MAX_CLIENT_WAIT_TIMEOUT_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9247",desc:"Â ",type:"constant"},{name:"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88FE",desc:"Describes the frequency divisor used for instanced rendering.",type:"constant"},{name:"UNMASKED_VENDOR_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9245",desc:"Passed to getParameter to get the vendor string of the graphics driver.",type:"constant"},{name:"UNMASKED_RENDERER_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9246",desc:"Passed to getParameter to get the renderer string of the graphics driver.",type:"constant"},{name:"MAX_TEXTURE_MAX_ANISOTROPY_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84FF",desc:"Returns the maximum available anisotropy.",type:"constant"},{name:"TEXTURE_MAX_ANISOTROPY_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84FE",desc:"Passed to texParameter to set the desired maximum anisotropy for a texture.",type:"constant"},{name:"COMPRESSED_RGB_S3TC_DXT1_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x83F0",desc:"A DXT1-compressed image in an RGB image format.",type:"constant"},{name:"COMPRESSED_RGBA_S3TC_DXT1_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x83F1",desc:"A DXT1-compressed image in an RGB image format with a simple on/off alpha value.",type:"constant"},{name:"COMPRESSED_RGBA_S3TC_DXT3_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x83F2",desc:"A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression.",type:"constant"},{name:"COMPRESSED_RGBA_S3TC_DXT5_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x83F3",desc:"A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done.",type:"constant"},{name:"COMPRESSED_R11_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9270",desc:"One-channel (red) unsigned format compression.",type:"constant"},{name:"COMPRESSED_SIGNED_R11_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9271",desc:"One-channel (red) signed format compression.",type:"constant"},{name:"COMPRESSED_RG11_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9272",desc:"Two-channel (red and green) unsigned format compression.",type:"constant"},{name:"COMPRESSED_SIGNED_RG11_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9273",desc:"Two-channel (red and green) signed format compression.",type:"constant"},{name:"COMPRESSED_RGB8_ETC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9274",desc:"Compresses RBG8 data with no alpha channel.",type:"constant"},{name:"COMPRESSED_RGBA8_ETC2_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9275",desc:"Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately.",type:"constant"},{name:"COMPRESSED_SRGB8_ETC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9276",desc:"Compresses sRBG8 data with no alpha channel.",type:"constant"},{name:"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9277",desc:"Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately.",type:"constant"},{name:"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9278",desc:"Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent.",type:"constant"},{name:"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x9279",desc:"Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent.",type:"constant"},{name:"COMPRESSED_RGB_PVRTC_4BPPV1_IMG",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C00",desc:"RGB compression in 4-bit mode. One block for each 4Ã4 pixels.",type:"constant"},{name:"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C02",desc:"RGBA compression in 4-bit mode. One block for each 4Ã4 pixels.",type:"constant"},{name:"COMPRESSED_RGB_PVRTC_2BPPV1_IMG",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C01",desc:"RGB compression in 2-bit mode. One block for each 8Ã4 pixels.",type:"constant"},{name:"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C03",desc:"RGBA compression in 2-bit mode. One block for each 8Ã4 pixe",type:"constant"},{name:"COMPRESSED_RGB_ETC1_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D64",desc:"Compresses 24-bit RGB data with no alpha channel.",type:"constant"},{name:"COMPRESSED_RGB_ATC_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C92",desc:"Compresses RGB textures with no alpha channel.",type:"constant"},{name:"COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C92",desc:"Compresses RGBA textures using explicit alpha encoding (useful when alpha transitions are sharp).",type:"constant"},{name:"COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x87EE",desc:"Compresses RGBA textures using interpolated alpha encoding (useful when alpha transitions are gradient).",type:"constant"},{name:"UNSIGNED_INT_24_8_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x84FA",desc:"Unsigned integer type for 24-bit depth texture data.",type:"constant"},{name:"HALF_FLOAT_OES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8D61",desc:"Half floating-point type (16-bit).",type:"constant"},{name:"RGBA32F_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8814",desc:"RGBA 32-bit floating-pointÂ color-renderable format.",type:"constant"},{name:"RGB32F_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8815",desc:"RGB 32-bit floating-pointÂ color-renderable format.",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8211",desc:"Â ",type:"constant"},{name:"UNSIGNED_NORMALIZED_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C17",desc:"Â ",type:"constant"},{name:"MIN_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8007",desc:"Produces the minimum color components of the source and destination colors.",type:"constant"},{name:"MAX_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8008",desc:"Produces the maximum color components of the source and destination colors.",type:"constant"},{name:"SRGB_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C40",desc:"Unsized sRGB format that leaves the precision up to the driver.",type:"constant"},{name:"SRGB_ALPHA_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C42",desc:"Unsized sRGB format with unsized alpha component.",type:"constant"},{name:"SRGB8_ALPHA8_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8C43",desc:"Sized (8-bit) sRGB and alpha formats.",type:"constant"},{name:"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8210",desc:"Returns the framebuffer color encoding.",type:"constant"},{name:"FRAGMENT_SHADER_DERIVATIVE_HINT_OES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8B8B",desc:"Indicates the accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth.",type:"constant"},{name:"COLOR_ATTACHMENT0_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE0",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT1_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE1",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT2_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE2",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT3_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE3",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT4_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE4",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT5_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE5",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT6_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE6",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT7_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE7",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT8_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE8",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT9_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CE9",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT10_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEA",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT11_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEB",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT12_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEC",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT13_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CED",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT14_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEE",desc:"Framebuffer color attachment point",type:"constant"},{name:"COLOR_ATTACHMENT15_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CEF",desc:"Framebuffer color attachment point",type:"constant"},{name:"DRAW_BUFFER0_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8825",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER1_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8826",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER2_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8827",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER3_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8828",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER4_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8829",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER5_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882A",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER6_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882B",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER7_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882C",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER8_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882D",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER9_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882E",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER10_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x882F",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER11_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8830",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER12_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8831",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER13_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8832",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER14_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8833",desc:"Draw buffer",type:"constant"},{name:"DRAW_BUFFER15_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8834",desc:"Draw buffer",type:"constant"},{name:"MAX_COLOR_ATTACHMENTS_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8CDF",desc:"Maximum number of framebuffer color attachment points",type:"constant"},{name:"MAX_DRAW_BUFFERS_WEBGL",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8824",desc:"Maximum number of draw buffers",type:"constant"},{name:"VERTEX_ARRAY_BINDING_OES",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x85B5",desc:"The bound vertex array object (VAO).",type:"constant"},{name:"QUERY_COUNTER_BITS_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8864",desc:"The number of bits used to hold the query result for the given target.",type:"constant"},{name:"CURRENT_QUERY_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8865",desc:"The currently active query.",type:"constant"},{name:"QUERY_RESULT_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8866",desc:"The query result.",type:"constant"},{name:"QUERY_RESULT_AVAILABLE_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8867",desc:"A Boolean indicating whether or not a query result is available.",type:"constant"},{name:"TIME_ELAPSED_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x88BF",desc:"Elapsed time (in nanoseconds).",type:"constant"},{name:"TIMESTAMP_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8E28",desc:"The current time.",type:"constant"},{name:"GPU_DISJOINT_EXT",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"0x8FBB",desc:"A Boolean indicating whether or not the GPU performed any disjoint operation.",type:"constant"},{name:"WebGL 1.0The definition of 'WebGLRenderingContext' in that specification.",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"Recommendation",desc:"Initial definition",type:"constant"},{name:"WebGL 2.0The definition of 'WebGL2RenderingContext' in that specification.",url:"developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants",value:"Editor's Draft",desc:"Defines additional constants.",type:"constant"}]},function(e,t,o){"use strict";var n=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))(function(a,r){function i(e){try{s(n.next(e))}catch(e){r(e)}}function l(e){try{s(n.throw(e))}catch(e){r(e)}}function s(e){e.done?a(e.value):new o(function(t){t(e.value)}).then(i,l)}s((n=n.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const a=o(1);t.default=class{provideCompletionItems(e,t){return n(this,void 0,void 0,function*(){const o=a.getInputVal(e,t);if(!o)return[];const n=a.createPropRegExp(o);return a.createCompleteItems(n,t)})}}}]);
//# sourceMappingURL=extension.js.map